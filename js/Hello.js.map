{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///Hello.js","webpack:///webpack/bootstrap a2b4dee2c209063e08a9","webpack:///./src/components/Hello.vue","webpack:///Hello.vue","webpack:///./~/babel-runtime/core-js/json/stringify.js","webpack:///./~/core-js/library/fn/json/stringify.js","webpack:///./~/core-js/library/modules/_core.js","webpack:///./~/sortablejs/Sortable.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./src/components/Hello.vue?479b","webpack:///./~/vuedraggable/dist/vuedraggable.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Component","_interopRequireDefault","obj","default","_stringify","_stringify2","_vuedraggable","_vuedraggable2","message","components","draggable","data","list","map","index","order","fixed","list2","editable","isDragging","delayedDragging","methods","orderList","sort","one","two","onMove","_ref","relatedContext","draggedContext","relatedElement","element","draggedElement","computed","dragOptions","animation","group","disabled","ghostClass","listString","list2String","watch","newValue","_this","$nextTick","core","$JSON","JSON","stringify","it","apply","arguments","version","__e","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","Sortable","el","options","nodeType","toString","_extend","expando","defaults","Math","random","store","handle","scroll","scrollSensitivity","scrollSpeed","test","nodeName","chosenClass","dragClass","ignore","filter","preventOnFilter","setData","dataTransfer","dragEl","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","x","y","_prepareGroup","fn","charAt","bind","nativeDraggable","supportDraggable","_on","_onTapStart","touchDragOverListeners","push","_onDragOver","_cloneHide","sortable","state","lastPullMode","cloneEl","_css","revertClone","rootEl","insertBefore","nextEl","_animate","_closest","selector","ctx","document","parentNode","_matches","_getParentOrHost","parent","host","_globalDragOver","evt","dropEffect","preventDefault","event","addEventListener","captureMode","_off","removeEventListener","_toggleClass","classList","className","replace","R_SPACE","prop","val","style","defaultView","getComputedStyle","currentStyle","_find","tagName","iterator","getElementsByTagName","length","_dispatchEvent","targetEl","fromEl","startIndex","newIndex","createEvent","onName","toUpperCase","substr","initEvent","to","from","item","clone","oldIndex","dispatchEvent","_onMove","toEl","dragRect","targetRect","originalEvt","willInsertAfter","retVal","onMoveFn","dragged","draggedRect","related","relatedRect","getBoundingClientRect","_disableDraggable","_unsilent","_silent","_ghostIsLast","lastEl","lastElementChild","rect","clientY","top","height","clientX","left","width","_generateId","str","src","href","sum","charCodeAt","_index","previousElementSibling","split","tag","shift","re","RegExp","join","match","_throttle","callback","ms","args","setTimeout","dst","key","_clone","$","Polymer","dom","cloneNode","_saveInputCheckedState","inputs","idx","checked","savedInputChecked","window","Error","parentEl","ghostEl","lastDownEl","scrollEl","scrollParentEl","scrollCustomFn","lastCSS","lastParentCSS","activeGroup","putSortable","tapEvt","touchEvt","moved","autoScroll","R_FLOAT","Date","getTime","win","parseInt","jQuery","Zepto","createElement","supportCssPointerEvents","navigator","userAgent","cssText","pointerEvents","abs","min","_autoScroll","vx","vy","scrollOffsetX","scrollOffsetY","sens","speed","winWidth","innerWidth","winHeight","innerHeight","scrollFn","offsetWidth","scrollWidth","offsetHeight","scrollHeight","right","bottom","clearInterval","pid","setInterval","scrollTo","pageXOffset","pageYOffset","scrollTop","scrollLeft","toFn","pull","fromGroup","indexOf","originalGroup","checkPull","checkPut","put","constructor","type","touch","touches","target","originalTarget","shadowRoot","path","button","some","criteria","trim","_prepareDragStart","dragStartFn","ownerDocument","nextSibling","_lastX","_lastY","_disableDelayedDrag","_triggerDragStart","forEach","_onDrop","_dragStartTimer","clearTimeout","pointerType","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","active","_nulling","_emulateDragOver","elementFromPoint","_onTouchMove","dx","dy","translate3d","_appendGhost","ghostRect","css","marginTop","marginLeft","body","appendChild","useFallback","_offUpEvents","_loopId","effectAllowed","revert","activeSortable","isOwner","isMovingBetweenSortable","canSort","stopPropagation","animated","contains","children","floating","cssFloat","display","isWide","isLong","halfway","nextElementSibling","after","elTop","offsetTop","tgTop","moveVector","prevRect","currentRect","removeChild","save","handleEvent","toArray","getAttribute","items","id","set","closest","option","destroy","Array","querySelectorAll","removeAttribute","splice","capture","passive","utils","on","off","find","is","extend","throttle","toggleClass","create","rawScriptExports","compiledTemplate","scopeId","cssModules","esModule","scriptExports","render","staticRenderFns","_scopeId","keys","_vm","_h","$createElement","_c","_self","staticClass","_m","_v","directives","rawName","expression","attrs","domProps","isArray","_i","__c","$event","$$a","$$el","$$c","$$i","concat","slice","click","move","start","end","model","$$v","_l","class","aria-hidden","_s","_toConsumableArray","arr","arr2","_extends","assign","source","buildDraggable","removeNode","node","parentElement","insertNodeAt","fatherNode","position","computeVmIndex","vnodes","elt","elm","_computeIndexes","slots","elmFromNodes","emit","evtName","evtData","$emit","toLowerCase","delegateAndEmit","_this2","realList","eventsListened","eventsToEmit","readonlyProperties","draggingElement","props","required","noTransitionOnDrag","Boolean","Function","original","String","transitionMode","componentMode","h","$slots","child","componentOptions","mounted","_this3","$el","optionsAdded","originalEvent","onDragMove","_sortable","rootContainer","computeIndexes","beforeDestroy","isCloning","handler","newOptionValue","deep","getChildrenNodes","$children","rawNodes","_this4","visibleIndexes","getUnderlyingVm","htmlElt","getUnderlyingPotencialDraggableComponent","__vue__","$options","_componentTag","$parent","emitChanges","_this5","alterList","onList","newList","spliceList","_arguments","updatePosition","getRelatedContextFromMoveEvent","_ref2","component","context","destination","getVmIndex","domIndex","indexes","numberIndexes","getComponent","componentInstance","resetTransitionData","transitionContainer","kept","onDragStart","_underlying_vm_","onDragAdd","added","onDragRemove","removed","onDragUpdate","computeFutureIndex","domChildren","currentDOMIndex","currentIndex","futureIndex","onDragEnd"],"mappings":"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","file":"Hello.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Hello\"] = factory();\n\telse\n\t\troot[\"Hello\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Hello\"] = factory();\n\telse\n\t\troot[\"Hello\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(1)\n\nvar Component = __webpack_require__(7)(\n  /* script */\n  __webpack_require__(2),\n  /* template */\n  __webpack_require__(8),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _stringify = __webpack_require__(3);\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _vuedraggable = __webpack_require__(9);\n\nvar _vuedraggable2 = _interopRequireDefault(_vuedraggable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar message = ['vue.draggable', 'draggable', 'component', 'for', 'vue.js 2.0', 'based', 'on', 'Sortablejs'];\n\nexports.default = {\n  name: 'hello',\n  components: {\n    draggable: _vuedraggable2.default\n\n  },\n  data: function data() {\n    return {\n      list: message.map(function (name, index) {\n        return { name: name, order: index + 1, fixed: false };\n      }),\n      list2: [],\n      editable: true,\n      isDragging: false,\n      delayedDragging: false\n    };\n  },\n\n  methods: {\n    orderList: function orderList() {\n      this.list = this.list.sort(function (one, two) {\n        return one.order - two.order;\n      });\n    },\n    onMove: function onMove(_ref) {\n      var relatedContext = _ref.relatedContext,\n          draggedContext = _ref.draggedContext;\n\n      var relatedElement = relatedContext.element;\n      var draggedElement = draggedContext.element;\n      return (!relatedElement || !relatedElement.fixed) && !draggedElement.fixed;\n    }\n  },\n  computed: {\n    dragOptions: function dragOptions() {\n      return {\n        animation: 0,\n        group: 'description',\n        disabled: !this.editable,\n        ghostClass: 'ghost'\n      };\n    },\n    listString: function listString() {\n      return (0, _stringify2.default)(this.list, null, 2);\n    },\n    list2String: function list2String() {\n      return (0, _stringify2.default)(this.list2, null, 2);\n    }\n  },\n  watch: {\n    isDragging: function isDragging(newValue) {\n      var _this = this;\n\n      if (newValue) {\n        this.delayedDragging = true;\n        return;\n      }\n      this.$nextTick(function () {\n        _this.delayedDragging = false;\n      });\n    }\n  }\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(4), __esModule: true };\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar core  = __webpack_require__(5)\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nvar core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**!\n * Sortable\n * @author\tRubaXa   <trash@rubaxa.org>\n * @license MIT\n */\n\n(function sortableModule(factory) {\n\t\"use strict\";\n\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\n\telse if (typeof module != \"undefined\" && typeof module.exports != \"undefined\") {\n\t\tmodule.exports = factory();\n\t}\n\telse {\n\t\t/* jshint sub:true */\n\t\twindow[\"Sortable\"] = factory();\n\t}\n})(function sortableFactory() {\n\t\"use strict\";\n\n\tif (typeof window == \"undefined\" || !window.document) {\n\t\treturn function sortableError() {\n\t\t\tthrow new Error(\"Sortable.js requires a window with a document\");\n\t\t};\n\t}\n\n\tvar dragEl,\n\t\tparentEl,\n\t\tghostEl,\n\t\tcloneEl,\n\t\trootEl,\n\t\tnextEl,\n\t\tlastDownEl,\n\n\t\tscrollEl,\n\t\tscrollParentEl,\n\t\tscrollCustomFn,\n\n\t\tlastEl,\n\t\tlastCSS,\n\t\tlastParentCSS,\n\n\t\toldIndex,\n\t\tnewIndex,\n\n\t\tactiveGroup,\n\t\tputSortable,\n\n\t\tautoScroll = {},\n\n\t\ttapEvt,\n\t\ttouchEvt,\n\n\t\tmoved,\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\t\tR_FLOAT = /left|right|inline/,\n\n\t\texpando = 'Sortable' + (new Date).getTime(),\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\n\t\t$ = win.jQuery || win.Zepto,\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = false,\n\n\t\tsupportDraggable = !!('draggable' in document.createElement('div')),\n\t\tsupportCssPointerEvents = (function (el) {\n\t\t\t// false when IE11\n\t\t\tif (!!navigator.userAgent.match(/Trident.*rv[ :]?11\\./)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tel = document.createElement('x');\n\t\t\tel.style.cssText = 'pointer-events:auto';\n\t\t\treturn el.style.pointerEvents === 'auto';\n\t\t})(),\n\n\t\t_silent = false,\n\n\t\tabs = Math.abs,\n\t\tmin = Math.min,\n\n\t\tsavedInputChecked = [],\n\t\ttouchDragOverListeners = [],\n\n\t\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl) {\n\t\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n\t\t\tif (rootEl && options.scroll) {\n\t\t\t\tvar _this = rootEl[expando],\n\t\t\t\t\tel,\n\t\t\t\t\trect,\n\t\t\t\t\tsens = options.scrollSensitivity,\n\t\t\t\t\tspeed = options.scrollSpeed,\n\n\t\t\t\t\tx = evt.clientX,\n\t\t\t\t\ty = evt.clientY,\n\n\t\t\t\t\twinWidth = window.innerWidth,\n\t\t\t\t\twinHeight = window.innerHeight,\n\n\t\t\t\t\tvx,\n\t\t\t\t\tvy,\n\n\t\t\t\t\tscrollOffsetX,\n\t\t\t\t\tscrollOffsetY\n\t\t\t\t;\n\n\t\t\t\t// Delect scrollEl\n\t\t\t\tif (scrollParentEl !== rootEl) {\n\t\t\t\t\tscrollEl = options.scroll;\n\t\t\t\t\tscrollParentEl = rootEl;\n\t\t\t\t\tscrollCustomFn = options.scrollFn;\n\n\t\t\t\t\tif (scrollEl === true) {\n\t\t\t\t\t\tscrollEl = rootEl;\n\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif ((scrollEl.offsetWidth < scrollEl.scrollWidth) ||\n\t\t\t\t\t\t\t\t(scrollEl.offsetHeight < scrollEl.scrollHeight)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\t\t} while (scrollEl = scrollEl.parentNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (scrollEl) {\n\t\t\t\t\tel = scrollEl;\n\t\t\t\t\trect = scrollEl.getBoundingClientRect();\n\t\t\t\t\tvx = (abs(rect.right - x) <= sens) - (abs(rect.left - x) <= sens);\n\t\t\t\t\tvy = (abs(rect.bottom - y) <= sens) - (abs(rect.top - y) <= sens);\n\t\t\t\t}\n\n\n\t\t\t\tif (!(vx || vy)) {\n\t\t\t\t\tvx = (winWidth - x <= sens) - (x <= sens);\n\t\t\t\t\tvy = (winHeight - y <= sens) - (y <= sens);\n\n\t\t\t\t\t/* jshint expr:true */\n\t\t\t\t\t(vx || vy) && (el = win);\n\t\t\t\t}\n\n\n\t\t\t\tif (autoScroll.vx !== vx || autoScroll.vy !== vy || autoScroll.el !== el) {\n\t\t\t\t\tautoScroll.el = el;\n\t\t\t\t\tautoScroll.vx = vx;\n\t\t\t\t\tautoScroll.vy = vy;\n\n\t\t\t\t\tclearInterval(autoScroll.pid);\n\n\t\t\t\t\tif (el) {\n\t\t\t\t\t\tautoScroll.pid = setInterval(function () {\n\t\t\t\t\t\t\tscrollOffsetY = vy ? vy * speed : 0;\n\t\t\t\t\t\t\tscrollOffsetX = vx ? vx * speed : 0;\n\n\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\n\t\t\t\t\t\t\t\treturn scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (el === win) {\n\t\t\t\t\t\t\t\twin.scrollTo(win.pageXOffset + scrollOffsetX, win.pageYOffset + scrollOffsetY);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tel.scrollTop += scrollOffsetY;\n\t\t\t\t\t\t\t\tel.scrollLeft += scrollOffsetX;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 24);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, 30),\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\tif (value === void 0 || value === true) {\n\t\t\t\t\tvalue = group.name;\n\t\t\t\t}\n\n\t\t\t\tif (typeof value === 'function') {\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\treturn function (to, from) {\n\t\t\t\t\t\tvar fromGroup = from.options.group.name;\n\n\t\t\t\t\t\treturn pull\n\t\t\t\t\t\t\t? value\n\t\t\t\t\t\t\t: value && (value.join\n\t\t\t\t\t\t\t\t? value.indexOf(fromGroup) > -1\n\t\t\t\t\t\t\t\t: (fromGroup == value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t}\n\t;\n\n\n\t/**\n\t * @class  Sortable\n\t * @param  {HTMLElement}  el\n\t * @param  {Object}       [options]\n\t */\n\tfunction Sortable(el, options) {\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, and not ' + {}.toString.call(el);\n\t\t}\n\n\t\tthis.el = el; // root element\n\t\tthis.options = options = _extend({}, options);\n\n\n\t\t// Export instance\n\t\tel[expando] = this;\n\n\t\t// Default options\n\t\tvar defaults = {\n\t\t\tgroup: Math.random(),\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? 'li' : '>*',\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackOnBody: false,\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0}\n\t\t};\n\n\n\t\t// Set default options\n\t\tfor (var name in defaults) {\n\t\t\t!(name in options) && (options[name] = defaults[name]);\n\t\t}\n\n\t\t_prepareGroup(options);\n\n\t\t// Bind all private methods\n\t\tfor (var fn in this) {\n\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t}\n\t\t}\n\n\t\t// Setup drag mode\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\t// Bind events\n\t\t_on(el, 'mousedown', this._onTapStart);\n\t\t_on(el, 'touchstart', this._onTapStart);\n\t\t_on(el, 'pointerdown', this._onTapStart);\n\n\t\tif (this.nativeDraggable) {\n\t\t\t_on(el, 'dragover', this);\n\t\t\t_on(el, 'dragenter', this);\n\t\t}\n\n\t\ttouchDragOverListeners.push(this._onDragOver);\n\n\t\t// Restore sorting\n\t\toptions.store && this.sort(options.store.get(this));\n\t}\n\n\n\tSortable.prototype = /** @lends Sortable.prototype */ {\n\t\tconstructor: Sortable,\n\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\n\t\t\tvar _this = this,\n\t\t\t\tel = this.el,\n\t\t\t\toptions = this.options,\n\t\t\t\tpreventOnFilter = options.preventOnFilter,\n\t\t\t\ttype = evt.type,\n\t\t\t\ttouch = evt.touches && evt.touches[0],\n\t\t\t\ttarget = (touch || evt).target,\n\t\t\t\toriginalTarget = evt.target.shadowRoot && evt.path[0] || target,\n\t\t\t\tfilter = options.filter,\n\t\t\t\tstartIndex;\n\n\t\t\t_saveInputCheckedState(el);\n\n\n\t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\t\t\tif (dragEl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (type === 'mousedown' && evt.button !== 0 || options.disabled) {\n\t\t\t\treturn; // only left button or enabled\n\t\t\t}\n\n\n\t\t\ttarget = _closest(target, options.draggable, el);\n\n\t\t\tif (!target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (lastDownEl === target) {\n\t\t\t\t// Ignoring duplicate `down`\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get the index of the dragged element within its parent\n\t\t\tstartIndex = _index(target, options.draggable);\n\n\t\t\t// Check filter\n\t\t\tif (typeof filter === 'function') {\n\t\t\t\tif (filter.call(this, evt, target, this)) {\n\t\t\t\t\t_dispatchEvent(_this, originalTarget, 'filter', target, el, startIndex);\n\t\t\t\t\tpreventOnFilter && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (filter) {\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\n\t\t\t\t\tcriteria = _closest(originalTarget, criteria.trim(), el);\n\n\t\t\t\t\tif (criteria) {\n\t\t\t\t\t\t_dispatchEvent(_this, criteria, 'filter', target, el, startIndex);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tpreventOnFilter && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.handle && !_closest(originalTarget, options.handle, el)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare `dragstart`\n\t\t\tthis._prepareDragStart(evt, touch, target, startIndex);\n\t\t},\n\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex) {\n\t\t\tvar _this = this,\n\t\t\t\tel = _this.el,\n\t\t\t\toptions = _this.options,\n\t\t\t\townerDocument = el.ownerDocument,\n\t\t\t\tdragStartFn;\n\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\n\t\t\t\ttapEvt = evt;\n\n\t\t\t\trootEl = el;\n\t\t\t\tdragEl = target;\n\t\t\t\tparentEl = dragEl.parentNode;\n\t\t\t\tnextEl = dragEl.nextSibling;\n\t\t\t\tlastDownEl = target;\n\t\t\t\tactiveGroup = options.group;\n\t\t\t\toldIndex = startIndex;\n\n\t\t\t\tthis._lastX = (touch || evt).clientX;\n\t\t\t\tthis._lastY = (touch || evt).clientY;\n\n\t\t\t\tdragEl.style['will-change'] = 'transform';\n\n\t\t\t\tdragStartFn = function () {\n\t\t\t\t\t// Delayed drag has been triggered\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\n\t\t\t\t\t_this._disableDelayedDrag();\n\n\t\t\t\t\t// Make the element draggable\n\t\t\t\t\tdragEl.draggable = _this.nativeDraggable;\n\n\t\t\t\t\t// Chosen item\n\t\t\t\t\t_toggleClass(dragEl, options.chosenClass, true);\n\n\t\t\t\t\t// Bind the events: dragstart/dragend\n\t\t\t\t\t_this._triggerDragStart(evt, touch);\n\n\t\t\t\t\t// Drag start event\n\t\t\t\t\t_dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, oldIndex);\n\t\t\t\t};\n\n\t\t\t\t// Disable \"draggable\"\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\n\t\t\t\t});\n\n\t\t\t\t_on(ownerDocument, 'mouseup', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchend', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchcancel', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'pointercancel', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'selectstart', _this);\n\n\t\t\t\tif (options.delay) {\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\n\t\t\t\t\t// before the delay has been reached:\n\t\t\t\t\t// disable the delayed drag\n\t\t\t\t\t_on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'mousemove', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchmove', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'pointermove', _this._disableDelayedDrag);\n\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n\t\t\t\t} else {\n\t\t\t\t\tdragStartFn();\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t},\n\n\t\t_disableDelayedDrag: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\t\t\t_off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchend', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'mousemove', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchmove', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'pointermove', this._disableDelayedDrag);\n\t\t},\n\n\t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\n\t\t\ttouch = touch || (evt.pointerType == 'touch' ? evt : null);\n\n\t\t\tif (touch) {\n\t\t\t\t// Touch device support\n\t\t\t\ttapEvt = {\n\t\t\t\t\ttarget: dragEl,\n\t\t\t\t\tclientX: touch.clientX,\n\t\t\t\t\tclientY: touch.clientY\n\t\t\t\t};\n\n\t\t\t\tthis._onDragStart(tapEvt, 'touch');\n\t\t\t}\n\t\t\telse if (!this.nativeDraggable) {\n\t\t\t\tthis._onDragStart(tapEvt, true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_on(dragEl, 'dragend', this);\n\t\t\t\t_on(rootEl, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (document.selection) {\n\t\t\t\t\t// Timeout neccessary for IE9\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t}\n\t\t},\n\n\t\t_dragStarted: function () {\n\t\t\tif (rootEl && dragEl) {\n\t\t\t\tvar options = this.options;\n\n\t\t\t\t// Apply effect\n\t\t\t\t_toggleClass(dragEl, options.ghostClass, true);\n\t\t\t\t_toggleClass(dragEl, options.dragClass, false);\n\n\t\t\t\tSortable.active = this;\n\n\t\t\t\t// Drag start event\n\t\t\t\t_dispatchEvent(this, rootEl, 'start', dragEl, rootEl, oldIndex);\n\t\t\t} else {\n\t\t\t\tthis._nulling();\n\t\t\t}\n\t\t},\n\n\t\t_emulateDragOver: function () {\n\t\t\tif (touchEvt) {\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._lastX = touchEvt.clientX;\n\t\t\t\tthis._lastY = touchEvt.clientY;\n\n\t\t\t\tif (!supportCssPointerEvents) {\n\t\t\t\t\t_css(ghostEl, 'display', 'none');\n\t\t\t\t}\n\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY),\n\t\t\t\t\tparent = target,\n\t\t\t\t\ti = touchDragOverListeners.length;\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (parent[expando]) {\n\t\t\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\t\t\ttouchDragOverListeners[i]({\n\t\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\n\t\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\n\t\t\t\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\t\t\t\trootEl: parent\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget = parent; // store last element\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\twhile (parent = parent.parentNode);\n\t\t\t\t}\n\n\t\t\t\tif (!supportCssPointerEvents) {\n\t\t\t\t\t_css(ghostEl, 'display', '');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t_onTouchMove: function (/**TouchEvent*/evt) {\n\t\t\tif (tapEvt) {\n\t\t\t\tvar\toptions = this.options,\n\t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\n\t\t\t\t\tfallbackOffset = options.fallbackOffset,\n\t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\n\t\t\t\t\tdx = (touch.clientX - tapEvt.clientX) + fallbackOffset.x,\n\t\t\t\t\tdy = (touch.clientY - tapEvt.clientY) + fallbackOffset.y,\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\n\n\t\t\t\t// only set the status to dragging, when we are actually dragging\n\t\t\t\tif (!Sortable.active) {\n\t\t\t\t\tif (fallbackTolerance &&\n\t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._dragStarted();\n\t\t\t\t}\n\n\t\t\t\t// as well as creating the ghost element on the document body\n\t\t\t\tthis._appendGhost();\n\n\t\t\t\tmoved = true;\n\t\t\t\ttouchEvt = touch;\n\n\t\t\t\t_css(ghostEl, 'webkitTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'mozTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'msTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'transform', translate3d);\n\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t_appendGhost: function () {\n\t\t\tif (!ghostEl) {\n\t\t\t\tvar rect = dragEl.getBoundingClientRect(),\n\t\t\t\t\tcss = _css(dragEl),\n\t\t\t\t\toptions = this.options,\n\t\t\t\t\tghostRect;\n\n\t\t\t\tghostEl = dragEl.cloneNode(true);\n\n\t\t\t\t_toggleClass(ghostEl, options.ghostClass, false);\n\t\t\t\t_toggleClass(ghostEl, options.fallbackClass, true);\n\t\t\t\t_toggleClass(ghostEl, options.dragClass, true);\n\n\t\t\t\t_css(ghostEl, 'top', rect.top - parseInt(css.marginTop, 10));\n\t\t\t\t_css(ghostEl, 'left', rect.left - parseInt(css.marginLeft, 10));\n\t\t\t\t_css(ghostEl, 'width', rect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height);\n\t\t\t\t_css(ghostEl, 'opacity', '0.8');\n\t\t\t\t_css(ghostEl, 'position', 'fixed');\n\t\t\t\t_css(ghostEl, 'zIndex', '100000');\n\t\t\t\t_css(ghostEl, 'pointerEvents', 'none');\n\n\t\t\t\toptions.fallbackOnBody && document.body.appendChild(ghostEl) || rootEl.appendChild(ghostEl);\n\n\t\t\t\t// Fixing dimensions.\n\t\t\t\tghostRect = ghostEl.getBoundingClientRect();\n\t\t\t\t_css(ghostEl, 'width', rect.width * 2 - ghostRect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height * 2 - ghostRect.height);\n\t\t\t}\n\t\t},\n\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/useFallback) {\n\t\t\tvar dataTransfer = evt.dataTransfer,\n\t\t\t\toptions = this.options;\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (activeGroup.checkPull(this, this, dragEl, evt)) {\n\t\t\t\tcloneEl = _clone(dragEl);\n\n\t\t\t\tcloneEl.draggable = false;\n\t\t\t\tcloneEl.style['will-change'] = '';\n\n\t\t\t\t_css(cloneEl, 'display', 'none');\n\t\t\t\t_toggleClass(cloneEl, this.options.chosenClass, false);\n\n\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t_dispatchEvent(this, rootEl, 'clone', dragEl);\n\t\t\t}\n\n\t\t\t_toggleClass(dragEl, options.dragClass, true);\n\n\t\t\tif (useFallback) {\n\t\t\t\tif (useFallback === 'touch') {\n\t\t\t\t\t// Bind touch events\n\t\t\t\t\t_on(document, 'touchmove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'touchend', this._onDrop);\n\t\t\t\t\t_on(document, 'touchcancel', this._onDrop);\n\t\t\t\t\t_on(document, 'pointermove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'pointerup', this._onDrop);\n\t\t\t\t} else {\n\t\t\t\t\t// Old brwoser\n\t\t\t\t\t_on(document, 'mousemove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'mouseup', this._onDrop);\n\t\t\t\t}\n\n\t\t\t\tthis._loopId = setInterval(this._emulateDragOver, 50);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (dataTransfer) {\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\n\t\t\t\t\toptions.setData && options.setData.call(this, dataTransfer, dragEl);\n\t\t\t\t}\n\n\t\t\t\t_on(document, 'drop', this);\n\t\t\t\tsetTimeout(this._dragStarted, 0);\n\t\t\t}\n\t\t},\n\n\t\t_onDragOver: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\ttarget,\n\t\t\t\tdragRect,\n\t\t\t\ttargetRect,\n\t\t\t\trevert,\n\t\t\t\toptions = this.options,\n\t\t\t\tgroup = options.group,\n\t\t\t\tactiveSortable = Sortable.active,\n\t\t\t\tisOwner = (activeGroup === group),\n\t\t\t\tisMovingBetweenSortable = false,\n\t\t\t\tcanSort = options.sort;\n\n\t\t\tif (evt.preventDefault !== void 0) {\n\t\t\t\tevt.preventDefault();\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation();\n\t\t\t}\n\n\t\t\tif (dragEl.animated) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmoved = true;\n\n\t\t\tif (activeSortable && !options.disabled &&\n\t\t\t\t(isOwner\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n\t\t\t\t\t: (\n\t\t\t\t\t\tputSortable === this ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(activeSortable.lastPullMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t) &&\n\t\t\t\t(evt.rootEl === void 0 || evt.rootEl === this.el) // touch fallback\n\t\t\t) {\n\t\t\t\t// Smart auto-scrolling\n\t\t\t\t_autoScroll(evt, options, this.el);\n\n\t\t\t\tif (_silent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttarget = _closest(evt.target, options.draggable, el);\n\t\t\t\tdragRect = dragEl.getBoundingClientRect();\n\n\t\t\t\tif (putSortable !== this) {\n\t\t\t\t\tputSortable = this;\n\t\t\t\t\tisMovingBetweenSortable = true;\n\t\t\t\t}\n\n\t\t\t\tif (revert) {\n\t\t\t\t\t_cloneHide(activeSortable, true);\n\t\t\t\t\tparentEl = rootEl; // actualization\n\n\t\t\t\t\tif (cloneEl || nextEl) {\n\t\t\t\t\t\trootEl.insertBefore(dragEl, cloneEl || nextEl);\n\t\t\t\t\t}\n\t\t\t\t\telse if (!canSort) {\n\t\t\t\t\t\trootEl.appendChild(dragEl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\tif ((el.children.length === 0) || (el.children[0] === ghostEl) ||\n\t\t\t\t\t(el === evt.target) && (_ghostIsLast(el, evt))\n\t\t\t\t) {\n\t\t\t\t\t//assign target only if condition is true\n\t\t\t\t\tif (el.children.length !== 0 && el.children[0] !== ghostEl && el === evt.target) {\n\t\t\t\t\t\ttarget = el.lastElementChild;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\tif (target.animated) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetRect = target.getBoundingClientRect();\n\t\t\t\t\t}\n\n\t\t\t\t\t_cloneHide(activeSortable, isOwner);\n\n\t\t\t\t\tif (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt) !== false) {\n\t\t\t\t\t\tif (!dragEl.contains(el)) {\n\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t\tparentEl = el; // actualization\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\ttarget && this._animate(targetRect, target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (target && !target.animated && target !== dragEl && (target.parentNode[expando] !== void 0)) {\n\t\t\t\t\tif (lastEl !== target) {\n\t\t\t\t\t\tlastEl = target;\n\t\t\t\t\t\tlastCSS = _css(target);\n\t\t\t\t\t\tlastParentCSS = _css(target.parentNode);\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetRect = target.getBoundingClientRect();\n\n\t\t\t\t\tvar width = targetRect.right - targetRect.left,\n\t\t\t\t\t\theight = targetRect.bottom - targetRect.top,\n\t\t\t\t\t\tfloating = R_FLOAT.test(lastCSS.cssFloat + lastCSS.display)\n\t\t\t\t\t\t\t|| (lastParentCSS.display == 'flex' && lastParentCSS['flex-direction'].indexOf('row') === 0),\n\t\t\t\t\t\tisWide = (target.offsetWidth > dragEl.offsetWidth),\n\t\t\t\t\t\tisLong = (target.offsetHeight > dragEl.offsetHeight),\n\t\t\t\t\t\thalfway = (floating ? (evt.clientX - targetRect.left) / width : (evt.clientY - targetRect.top) / height) > 0.5,\n\t\t\t\t\t\tnextSibling = target.nextElementSibling,\n\t\t\t\t\t\tafter = false\n\t\t\t\t\t;\n\n\t\t\t\t\tif (floating) {\n\t\t\t\t\t\tvar elTop = dragEl.offsetTop,\n\t\t\t\t\t\t\ttgTop = target.offsetTop;\n\n\t\t\t\t\t\tif (elTop === tgTop) {\n\t\t\t\t\t\t\tafter = (target.previousElementSibling === dragEl) && !isWide || halfway && isWide;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (target.previousElementSibling === dragEl || dragEl.previousElementSibling === target) {\n\t\t\t\t\t\t\tafter = (evt.clientY - targetRect.top) / height > 0.5;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tafter = tgTop > elTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (!isMovingBetweenSortable) {\n\t\t\t\t\t\tafter = (nextSibling !== dragEl) && !isLong || halfway && isLong;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n\t\t\t\t\tif (moveVector !== false) {\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n\t\t\t\t\t\t\tafter = (moveVector === 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_silent = true;\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\t\t_cloneHide(activeSortable, isOwner);\n\n\t\t\t\t\t\tif (!dragEl.contains(el)) {\n\t\t\t\t\t\t\tif (after && !nextSibling) {\n\t\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\n\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\tthis._animate(targetRect, target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = target.getBoundingClientRect();\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = prevRect.getBoundingClientRect();\n\t\t\t\t}\n\n\t\t\t\t_css(target, 'transition', 'none');\n\t\t\t\t_css(target, 'transform', 'translate3d('\n\t\t\t\t\t+ (prevRect.left - currentRect.left) + 'px,'\n\t\t\t\t\t+ (prevRect.top - currentRect.top) + 'px,0)'\n\t\t\t\t);\n\n\t\t\t\ttarget.offsetWidth; // repaint\n\n\t\t\t\t_css(target, 'transition', 'all ' + ms + 'ms');\n\t\t\t\t_css(target, 'transform', 'translate3d(0,0,0)');\n\n\t\t\t\tclearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\t_css(target, 'transition', '');\n\t\t\t\t\t_css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n\t\t_offUpEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\t_off(document, 'touchmove', this._onTouchMove);\n\t\t\t_off(document, 'pointermove', this._onTouchMove);\n\t\t\t_off(ownerDocument, 'mouseup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchend', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointerup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchcancel', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointercancel', this._onDrop);\n\t\t\t_off(ownerDocument, 'selectstart', this);\n\t\t},\n\n\t\t_onDrop: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\toptions = this.options;\n\n\t\t\tclearInterval(this._loopId);\n\t\t\tclearInterval(autoScroll.pid);\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\t// Unbind events\n\t\t\t_off(document, 'mousemove', this._onTouchMove);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(document, 'drop', this);\n\t\t\t\t_off(el, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (evt) {\n\t\t\t\tif (moved) {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\tghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n\t\t\t\tif (rootEl === parentEl || Sortable.active.lastPullMode !== 'clone') {\n\t\t\t\t\t// Remove clone\n\t\t\t\t\tcloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (dragEl) {\n\t\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\t\t_off(dragEl, 'dragend', this);\n\t\t\t\t\t}\n\n\t\t\t\t\t_disableDraggable(dragEl);\n\t\t\t\t\tdragEl.style['will-change'] = '';\n\n\t\t\t\t\t// Remove class's\n\t\t\t\t\t_toggleClass(dragEl, this.options.ghostClass, false);\n\t\t\t\t\t_toggleClass(dragEl, this.options.chosenClass, false);\n\n\t\t\t\t\t// Drag stop event\n\t\t\t\t\t_dispatchEvent(this, rootEl, 'unchoose', dragEl, rootEl, oldIndex);\n\n\t\t\t\t\tif (rootEl !== parentEl) {\n\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'add', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'remove', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t\t// drag from one list and drop into another\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n\t\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t\t// drag & drop within the same list\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'update', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Sortable.active) {\n\t\t\t\t\t\t/* jshint eqnull:true */\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\n\t\t\t\t\t\t\tnewIndex = oldIndex;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'end', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t// Save sorting\n\t\t\t\t\t\tthis.save();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._nulling();\n\t\t},\n\n\t\t_nulling: function() {\n\t\t\trootEl =\n\t\t\tdragEl =\n\t\t\tparentEl =\n\t\t\tghostEl =\n\t\t\tnextEl =\n\t\t\tcloneEl =\n\t\t\tlastDownEl =\n\n\t\t\tscrollEl =\n\t\t\tscrollParentEl =\n\n\t\t\ttapEvt =\n\t\t\ttouchEvt =\n\n\t\t\tmoved =\n\t\t\tnewIndex =\n\n\t\t\tlastEl =\n\t\t\tlastCSS =\n\n\t\t\tputSortable =\n\t\t\tactiveGroup =\n\t\t\tSortable.active = null;\n\n\t\t\tsavedInputChecked.forEach(function (el) {\n\t\t\t\tel.checked = true;\n\t\t\t});\n\t\t\tsavedInputChecked.length = 0;\n\t\t},\n\n\t\thandleEvent: function (/**Event*/evt) {\n\t\t\tswitch (evt.type) {\n\t\t\t\tcase 'drop':\n\t\t\t\tcase 'dragend':\n\t\t\t\t\tthis._onDrop(evt);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dragover':\n\t\t\t\tcase 'dragenter':\n\t\t\t\t\tif (dragEl) {\n\t\t\t\t\t\tthis._onDragOver(evt);\n\t\t\t\t\t\t_globalDragOver(evt);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'selectstart':\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (_closest(el, options.draggable, this.el)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (_closest(el, this.options.draggable, rootEl)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn _closest(el, selector || this.options.draggable, this.el);\n\t\t},\n\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[expando] = null;\n\n\t\t\t_off(el, 'mousedown', this._onTapStart);\n\t\t\t_off(el, 'touchstart', this._onTapStart);\n\t\t\t_off(el, 'pointerdown', this._onTapStart);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(el, 'dragover', this);\n\t\t\t\t_off(el, 'dragenter', this);\n\t\t\t}\n\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\ttouchDragOverListeners.splice(touchDragOverListeners.indexOf(this._onDragOver), 1);\n\n\t\t\tthis._onDrop();\n\n\t\t\tthis.el = el = null;\n\t\t}\n\t};\n\n\n\tfunction _cloneHide(sortable, state) {\n\t\tif (sortable.lastPullMode !== 'clone') {\n\t\t\tstate = true;\n\t\t}\n\n\t\tif (cloneEl && (cloneEl.state !== state)) {\n\t\t\t_css(cloneEl, 'display', state ? 'none' : '');\n\n\t\t\tif (!state) {\n\t\t\t\tif (cloneEl.state) {\n\t\t\t\t\tif (sortable.options.group.revertClone) {\n\t\t\t\t\t\trootEl.insertBefore(cloneEl, nextEl);\n\t\t\t\t\t\tsortable._animate(dragEl, cloneEl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcloneEl.state = state;\n\t\t}\n\t}\n\n\n\tfunction _closest(/**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx) {\n\t\tif (el) {\n\t\t\tctx = ctx || document;\n\n\t\t\tdo {\n\t\t\t\tif ((selector === '>*' && el.parentNode === ctx) || _matches(el, selector)) {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t\t/* jshint boss:true */\n\t\t\t} while (el = _getParentOrHost(el));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\tfunction _getParentOrHost(el) {\n\t\tvar parent = el.host;\n\n\t\treturn (parent && parent.nodeType) ? parent : el.parentNode;\n\t}\n\n\n\tfunction _globalDragOver(/**Event*/evt) {\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t}\n\t\tevt.preventDefault();\n\t}\n\n\n\tfunction _on(el, event, fn) {\n\t\tel.addEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _off(el, event, fn) {\n\t\tel.removeEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _toggleClass(el, name, state) {\n\t\tif (el) {\n\t\t\tif (el.classList) {\n\t\t\t\tel.classList[state ? 'add' : 'remove'](name);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n\t\t\t\tel.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _css(el, prop, val) {\n\t\tvar style = el && el.style;\n\n\t\tif (style) {\n\t\t\tif (val === void 0) {\n\t\t\t\tif (document.defaultView && document.defaultView.getComputedStyle) {\n\t\t\t\t\tval = document.defaultView.getComputedStyle(el, '');\n\t\t\t\t}\n\t\t\t\telse if (el.currentStyle) {\n\t\t\t\t\tval = el.currentStyle;\n\t\t\t\t}\n\n\t\t\t\treturn prop === void 0 ? val : val[prop];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!(prop in style)) {\n\t\t\t\t\tprop = '-webkit-' + prop;\n\t\t\t\t}\n\n\t\t\t\tstyle[prop] = val + (typeof val === 'string' ? '' : 'px');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _find(ctx, tagName, iterator) {\n\t\tif (ctx) {\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n\n\t\t\tif (iterator) {\n\t\t\t\tfor (; i < n; i++) {\n\t\t\t\t\titerator(list[i], i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\n\n\tfunction _dispatchEvent(sortable, rootEl, name, targetEl, fromEl, startIndex, newIndex) {\n\t\tsortable = (sortable || rootEl[expando]);\n\n\t\tvar evt = document.createEvent('Event'),\n\t\t\toptions = sortable.options,\n\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n\n\t\tevt.initEvent(name, true, true);\n\n\t\tevt.to = rootEl;\n\t\tevt.from = fromEl || rootEl;\n\t\tevt.item = targetEl || rootEl;\n\t\tevt.clone = cloneEl;\n\n\t\tevt.oldIndex = startIndex;\n\t\tevt.newIndex = newIndex;\n\n\t\trootEl.dispatchEvent(evt);\n\n\t\tif (options[onName]) {\n\t\t\toptions[onName].call(sortable, evt);\n\t\t}\n\t}\n\n\n\tfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\n\t\tvar evt,\n\t\t\tsortable = fromEl[expando],\n\t\t\tonMoveFn = sortable.options.onMove,\n\t\t\tretVal;\n\n\t\tevt = document.createEvent('Event');\n\t\tevt.initEvent('move', true, true);\n\n\t\tevt.to = toEl;\n\t\tevt.from = fromEl;\n\t\tevt.dragged = dragEl;\n\t\tevt.draggedRect = dragRect;\n\t\tevt.related = targetEl || toEl;\n\t\tevt.relatedRect = targetRect || toEl.getBoundingClientRect();\n\t\tevt.willInsertAfter = willInsertAfter;\n\n\t\tfromEl.dispatchEvent(evt);\n\n\t\tif (onMoveFn) {\n\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\n\t\t}\n\n\t\treturn retVal;\n\t}\n\n\n\tfunction _disableDraggable(el) {\n\t\tel.draggable = false;\n\t}\n\n\n\tfunction _unsilent() {\n\t\t_silent = false;\n\t}\n\n\n\t/** @returns {HTMLElement|false} */\n\tfunction _ghostIsLast(el, evt) {\n\t\tvar lastEl = el.lastElementChild,\n\t\t\trect = lastEl.getBoundingClientRect();\n\n\t\t// 5 — min delta\n\t\t// abs — нельзя добавлять, а то глюки при наведении сверху\n\t\treturn (evt.clientY - (rect.top + rect.height) > 5) ||\n\t\t\t(evt.clientX - (rect.left + rect.width) > 5);\n\t}\n\n\n\t/**\n\t * Generate id\n\t * @param   {HTMLElement} el\n\t * @returns {String}\n\t * @private\n\t */\n\tfunction _generateId(el) {\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\n\t\t\ti = str.length,\n\t\t\tsum = 0;\n\n\t\twhile (i--) {\n\t\t\tsum += str.charCodeAt(i);\n\t\t}\n\n\t\treturn sum.toString(36);\n\t}\n\n\t/**\n\t * Returns the index of an element within its parent for a selected set of\n\t * elements\n\t * @param  {HTMLElement} el\n\t * @param  {selector} selector\n\t * @return {number}\n\t */\n\tfunction _index(el, selector) {\n\t\tvar index = 0;\n\n\t\tif (!el || !el.parentNode) {\n\t\t\treturn -1;\n\t\t}\n\n\t\twhile (el && (el = el.previousElementSibling)) {\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && (selector === '>*' || _matches(el, selector))) {\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tfunction _matches(/**HTMLElement*/el, /**String*/selector) {\n\t\tif (el) {\n\t\t\tselector = selector.split('.');\n\n\t\t\tvar tag = selector.shift().toUpperCase(),\n\t\t\t\tre = new RegExp('\\\\s(' + selector.join('|') + ')(?=\\\\s)', 'g');\n\n\t\t\treturn (\n\t\t\t\t(tag === '' || el.nodeName.toUpperCase() == tag) &&\n\t\t\t\t(!selector.length || ((' ' + el.className + ' ').match(re) || []).length == selector.length)\n\t\t\t);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction _throttle(callback, ms) {\n\t\tvar args, _this;\n\n\t\treturn function () {\n\t\t\tif (args === void 0) {\n\t\t\t\targs = arguments;\n\t\t\t\t_this = this;\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (args.length === 1) {\n\t\t\t\t\t\tcallback.call(_this, args[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback.apply(_this, args);\n\t\t\t\t\t}\n\n\t\t\t\t\targs = void 0;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction _extend(dst, src) {\n\t\tif (dst && src) {\n\t\t\tfor (var key in src) {\n\t\t\t\tif (src.hasOwnProperty(key)) {\n\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\n\tfunction _clone(el) {\n\t\treturn $\n\t\t\t? $(el).clone(true)[0]\n\t\t\t: (Polymer && Polymer.dom\n\t\t\t\t? Polymer.dom(el).cloneNode(true)\n\t\t\t\t: el.cloneNode(true)\n\t\t\t);\n\t}\n\n\tfunction _saveInputCheckedState(root) {\n\t\tvar inputs = root.getElementsByTagName('input');\n\t\tvar idx = inputs.length;\n\n\t\twhile (idx--) {\n\t\t\tvar el = inputs[idx];\n\t\t\tel.checked && savedInputChecked.push(el);\n\t\t}\n\t}\n\n\t// Fixed #973: \n\t_on(document, 'touchmove', function (evt) {\n\t\tif (Sortable.active) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t});\n\n\ttry {\n\t\twindow.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n\t\t\tget: function () {\n\t\t\t\tcaptureMode = {\n\t\t\t\t\tcapture: false,\n\t\t\t\t\tpassive: false\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t} catch (err) {}\n\n\t// Export utils\n\tSortable.utils = {\n\t\ton: _on,\n\t\toff: _off,\n\t\tcss: _css,\n\t\tfind: _find,\n\t\tis: function (el, selector) {\n\t\t\treturn !!_closest(el, selector, el);\n\t\t},\n\t\textend: _extend,\n\t\tthrottle: _throttle,\n\t\tclosest: _closest,\n\t\ttoggleClass: _toggleClass,\n\t\tclone: _clone,\n\t\tindex: _index\n\t};\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.6.0';\n\treturn Sortable;\n});\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"fluid container\"\n  }, [_c('div', {\n    staticClass: \"form-group form-group-lg panel panel-default\"\n  }, [_vm._m(0), _vm._v(\" \"), _c('div', {\n    staticClass: \"panel-body\"\n  }, [_c('div', {\n    staticClass: \"checkbox\"\n  }, [_c('label', [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.editable),\n      expression: \"editable\"\n    }],\n    attrs: {\n      \"type\": \"checkbox\"\n    },\n    domProps: {\n      \"checked\": Array.isArray(_vm.editable) ? _vm._i(_vm.editable, null) > -1 : (_vm.editable)\n    },\n    on: {\n      \"__c\": function($event) {\n        var $$a = _vm.editable,\n          $$el = $event.target,\n          $$c = $$el.checked ? (true) : (false);\n        if (Array.isArray($$a)) {\n          var $$v = null,\n            $$i = _vm._i($$a, $$v);\n          if ($$c) {\n            $$i < 0 && (_vm.editable = $$a.concat($$v))\n          } else {\n            $$i > -1 && (_vm.editable = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))\n          }\n        } else {\n          _vm.editable = $$c\n        }\n      }\n    }\n  }), _vm._v(\"Enable drag and drop\")])]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-default\",\n    attrs: {\n      \"type\": \"button\"\n    },\n    on: {\n      \"click\": _vm.orderList\n    }\n  }, [_vm._v(\"Sort by original order\")])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-md-3\"\n  }, [_c('draggable', {\n    staticClass: \"list-group\",\n    attrs: {\n      \"element\": \"ul\",\n      \"options\": _vm.dragOptions,\n      \"move\": _vm.onMove\n    },\n    on: {\n      \"start\": function($event) {\n        _vm.isDragging = true\n      },\n      \"end\": function($event) {\n        _vm.isDragging = false\n      }\n    },\n    model: {\n      value: (_vm.list),\n      callback: function($$v) {\n        _vm.list = $$v\n      },\n      expression: \"list\"\n    }\n  }, [_c('transition-group', {\n    attrs: {\n      \"type\": \"transition\",\n      \"name\": 'flip-list'\n    }\n  }, _vm._l((_vm.list), function(element) {\n    return _c('li', {\n      key: element.order,\n      staticClass: \"list-group-item\"\n    }, [_c('i', {\n      class: element.fixed ? 'fa fa-anchor' : 'glyphicon glyphicon-pushpin',\n      attrs: {\n        \"aria-hidden\": \"true\"\n      },\n      on: {\n        \"click\": function($event) {\n          element.fixed = !element.fixed\n        }\n      }\n    }), _vm._v(\"\\n            \" + _vm._s(element.name) + \"\\n            \"), _c('span', {\n      staticClass: \"badge\"\n    }, [_vm._v(_vm._s(element.order))])])\n  }))], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-md-3\"\n  }, [_c('draggable', {\n    attrs: {\n      \"element\": \"span\",\n      \"options\": _vm.dragOptions,\n      \"move\": _vm.onMove\n    },\n    model: {\n      value: (_vm.list2),\n      callback: function($$v) {\n        _vm.list2 = $$v\n      },\n      expression: \"list2\"\n    }\n  }, [_c('transition-group', {\n    staticClass: \"list-group\",\n    attrs: {\n      \"name\": \"no\",\n      \"tag\": \"ul\"\n    }\n  }, _vm._l((_vm.list2), function(element) {\n    return _c('li', {\n      key: element.order,\n      staticClass: \"list-group-item\"\n    }, [_c('i', {\n      class: element.fixed ? 'fa fa-anchor' : 'glyphicon glyphicon-pushpin',\n      attrs: {\n        \"aria-hidden\": \"true\"\n      },\n      on: {\n        \"click\": function($event) {\n          element.fixed = !element.fixed\n        }\n      }\n    }), _vm._v(\"\\n            \" + _vm._s(element.name) + \"\\n            \"), _c('span', {\n      staticClass: \"badge\"\n    }, [_vm._v(_vm._s(element.order))])])\n  }))], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"list-group col-md-3\"\n  }, [_c('pre', [_vm._v(_vm._s(_vm.listString))])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"list-group col-md-3\"\n  }, [_c('pre', [_vm._v(_vm._s(_vm.list2String))])])])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"panel-heading\"\n  }, [_c('h3', {\n    staticClass: \"panel-title\"\n  }, [_vm._v(\"Sortbale control\")])])\n}]}\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n(function () {\n  \"use strict\";\n\n  function buildDraggable(Sortable) {\n    function removeNode(node) {\n      node.parentElement.removeChild(node);\n    }\n\n    function insertNodeAt(fatherNode, node, position) {\n      if (position < fatherNode.children.length) {\n        fatherNode.insertBefore(node, fatherNode.children[position]);\n      } else {\n        fatherNode.appendChild(node);\n      }\n    }\n\n    function computeVmIndex(vnodes, element) {\n      return vnodes.map(function (elt) {\n        return elt.elm;\n      }).indexOf(element);\n    }\n\n    function _computeIndexes(slots, children) {\n      if (!slots) {\n        return [];\n      }\n\n      var elmFromNodes = slots.map(function (elt) {\n        return elt.elm;\n      });\n      return [].concat(_toConsumableArray(children)).map(function (elt) {\n        return elmFromNodes.indexOf(elt);\n      });\n    }\n\n    function emit(evtName, evtData) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        return _this.$emit(evtName.toLowerCase(), evtData);\n      });\n    }\n\n    function delegateAndEmit(evtName) {\n      var _this2 = this;\n\n      return function (evtData) {\n        if (_this2.realList !== null) {\n          _this2['onDrag' + evtName](evtData);\n        }\n        emit.call(_this2, evtName, evtData);\n      };\n    }\n\n    var eventsListened = ['Start', 'Add', 'Remove', 'Update', 'End'];\n    var eventsToEmit = ['Choose', 'Sort', 'Filter', 'Clone'];\n    var readonlyProperties = ['Move'].concat(eventsListened, eventsToEmit).map(function (evt) {\n      return 'on' + evt;\n    });\n    var draggingElement = null;\n\n    var props = {\n      options: Object,\n      list: {\n        type: Array,\n        required: false,\n        default: null\n      },\n      value: {\n        type: Array,\n        required: false,\n        default: null\n      },\n      noTransitionOnDrag: {\n        type: Boolean,\n        default: false\n      },\n      clone: {\n        type: Function,\n        default: function _default(original) {\n          return original;\n        }\n      },\n      element: {\n        type: String,\n        default: 'div'\n      },\n      move: {\n        type: Function,\n        default: null\n      }\n    };\n\n    var draggableComponent = {\n      props: props,\n\n      data: function data() {\n        return {\n          transitionMode: false,\n          componentMode: false\n        };\n      },\n      render: function render(h) {\n        if (this.$slots.default && this.$slots.default.length === 1) {\n          var child = this.$slots.default[0];\n          if (child.componentOptions && child.componentOptions.tag === \"transition-group\") {\n            this.transitionMode = true;\n          }\n        }\n        return h(this.element, null, this.$slots.default);\n      },\n      mounted: function mounted() {\n        var _this3 = this;\n\n        this.componentMode = this.element.toLowerCase() !== this.$el.nodeName.toLowerCase();\n        if (this.componentMode && this.transitionMode) {\n          throw new Error('Transition-group inside component is not supported. Please alter element value or remove transition-group. Current element value: ' + this.element);\n        }\n        var optionsAdded = {};\n        eventsListened.forEach(function (elt) {\n          optionsAdded['on' + elt] = delegateAndEmit.call(_this3, elt);\n        });\n\n        eventsToEmit.forEach(function (elt) {\n          optionsAdded['on' + elt] = emit.bind(_this3, elt);\n        });\n\n        var options = _extends({}, this.options, optionsAdded, { onMove: function onMove(evt, originalEvent) {\n            return _this3.onDragMove(evt, originalEvent);\n          } });\n        !('draggable' in options) && (options.draggable = '>*');\n        this._sortable = new Sortable(this.rootContainer, options);\n        this.computeIndexes();\n      },\n      beforeDestroy: function beforeDestroy() {\n        this._sortable.destroy();\n      },\n\n\n      computed: {\n        rootContainer: function rootContainer() {\n          return this.transitionMode ? this.$el.children[0] : this.$el;\n        },\n        isCloning: function isCloning() {\n          return !!this.options && !!this.options.group && this.options.group.pull === 'clone';\n        },\n        realList: function realList() {\n          return !!this.list ? this.list : this.value;\n        }\n      },\n\n      watch: {\n        options: {\n          handler: function handler(newOptionValue) {\n            for (var property in newOptionValue) {\n              if (readonlyProperties.indexOf(property) == -1) {\n                this._sortable.option(property, newOptionValue[property]);\n              }\n            }\n          },\n\n          deep: true\n        },\n\n        realList: function realList() {\n          this.computeIndexes();\n        }\n      },\n\n      methods: {\n        getChildrenNodes: function getChildrenNodes() {\n          if (this.componentMode) {\n            return this.$children[0].$slots.default;\n          }\n          var rawNodes = this.$slots.default;\n          return this.transitionMode ? rawNodes[0].child.$slots.default : rawNodes;\n        },\n        computeIndexes: function computeIndexes() {\n          var _this4 = this;\n\n          this.$nextTick(function () {\n            _this4.visibleIndexes = _computeIndexes(_this4.getChildrenNodes(), _this4.rootContainer.children);\n          });\n        },\n        getUnderlyingVm: function getUnderlyingVm(htmlElt) {\n          var index = computeVmIndex(this.getChildrenNodes(), htmlElt);\n          var element = this.realList[index];\n          return { index: index, element: element };\n        },\n        getUnderlyingPotencialDraggableComponent: function getUnderlyingPotencialDraggableComponent(_ref) {\n          var __vue__ = _ref.__vue__;\n\n          if (!__vue__ || !__vue__.$options || __vue__.$options._componentTag !== \"transition-group\") {\n            return __vue__;\n          }\n          return __vue__.$parent;\n        },\n        emitChanges: function emitChanges(evt) {\n          var _this5 = this;\n\n          this.$nextTick(function () {\n            _this5.$emit('change', evt);\n          });\n        },\n        alterList: function alterList(onList) {\n          if (!!this.list) {\n            onList(this.list);\n          } else {\n            var newList = [].concat(_toConsumableArray(this.value));\n            onList(newList);\n            this.$emit('input', newList);\n          }\n        },\n        spliceList: function spliceList() {\n          var _arguments = arguments;\n\n          var spliceList = function spliceList(list) {\n            return list.splice.apply(list, _arguments);\n          };\n          this.alterList(spliceList);\n        },\n        updatePosition: function updatePosition(oldIndex, newIndex) {\n          var updatePosition = function updatePosition(list) {\n            return list.splice(newIndex, 0, list.splice(oldIndex, 1)[0]);\n          };\n          this.alterList(updatePosition);\n        },\n        getRelatedContextFromMoveEvent: function getRelatedContextFromMoveEvent(_ref2) {\n          var to = _ref2.to,\n              related = _ref2.related;\n\n          var component = this.getUnderlyingPotencialDraggableComponent(to);\n          if (!component) {\n            return { component: component };\n          }\n          var list = component.realList;\n          var context = { list: list, component: component };\n          if (to !== related && list && component.getUnderlyingVm) {\n            var destination = component.getUnderlyingVm(related);\n            return _extends(destination, context);\n          }\n\n          return context;\n        },\n        getVmIndex: function getVmIndex(domIndex) {\n          var indexes = this.visibleIndexes;\n          var numberIndexes = indexes.length;\n          return domIndex > numberIndexes - 1 ? numberIndexes : indexes[domIndex];\n        },\n        getComponent: function getComponent() {\n          return this.$slots.default[0].componentInstance;\n        },\n        resetTransitionData: function resetTransitionData(index) {\n          if (!this.noTransitionOnDrag || !this.transitionMode) {\n            return;\n          }\n          var nodes = this.getChildrenNodes();\n          nodes[index].data = null;\n          var transitionContainer = this.getComponent();\n          transitionContainer.children = [];\n          transitionContainer.kept = undefined;\n        },\n        onDragStart: function onDragStart(evt) {\n          this.context = this.getUnderlyingVm(evt.item);\n          evt.item._underlying_vm_ = this.clone(this.context.element);\n          draggingElement = evt.item;\n        },\n        onDragAdd: function onDragAdd(evt) {\n          var element = evt.item._underlying_vm_;\n          if (element === undefined) {\n            return;\n          }\n          removeNode(evt.item);\n          var newIndex = this.getVmIndex(evt.newIndex);\n          this.spliceList(newIndex, 0, element);\n          this.computeIndexes();\n          var added = { element: element, newIndex: newIndex };\n          this.emitChanges({ added: added });\n        },\n        onDragRemove: function onDragRemove(evt) {\n          insertNodeAt(this.rootContainer, evt.item, evt.oldIndex);\n          if (this.isCloning) {\n            removeNode(evt.clone);\n            return;\n          }\n          var oldIndex = this.context.index;\n          this.spliceList(oldIndex, 1);\n          var removed = { element: this.context.element, oldIndex: oldIndex };\n          this.resetTransitionData(oldIndex);\n          this.emitChanges({ removed: removed });\n        },\n        onDragUpdate: function onDragUpdate(evt) {\n          removeNode(evt.item);\n          insertNodeAt(evt.from, evt.item, evt.oldIndex);\n          var oldIndex = this.context.index;\n          var newIndex = this.getVmIndex(evt.newIndex);\n          this.updatePosition(oldIndex, newIndex);\n          var moved = { element: this.context.element, oldIndex: oldIndex, newIndex: newIndex };\n          this.emitChanges({ moved: moved });\n        },\n        computeFutureIndex: function computeFutureIndex(relatedContext, evt) {\n          if (!relatedContext.element) {\n            return 0;\n          }\n          var domChildren = [].concat(_toConsumableArray(evt.to.children)).filter(function (el) {\n            return el.style['display'] !== 'none';\n          });\n          var currentDOMIndex = domChildren.indexOf(evt.related);\n          var currentIndex = relatedContext.component.getVmIndex(currentDOMIndex);\n          var draggedInList = domChildren.indexOf(draggingElement) != -1;\n          return draggedInList || !evt.willInsertAfter ? currentIndex : currentIndex + 1;\n        },\n        onDragMove: function onDragMove(evt, originalEvent) {\n          var onMove = this.move;\n          if (!onMove || !this.realList) {\n            return true;\n          }\n\n          var relatedContext = this.getRelatedContextFromMoveEvent(evt);\n          var draggedContext = this.context;\n          var futureIndex = this.computeFutureIndex(relatedContext, evt);\n          _extends(draggedContext, { futureIndex: futureIndex });\n          _extends(evt, { relatedContext: relatedContext, draggedContext: draggedContext });\n          return onMove(evt, originalEvent);\n        },\n        onDragEnd: function onDragEnd(evt) {\n          this.computeIndexes();\n          draggingElement = null;\n        }\n      }\n    };\n    return draggableComponent;\n  }\n\n  if (true) {\n    var Sortable = __webpack_require__(6);\n    module.exports = buildDraggable(Sortable);\n  } else if (typeof define == \"function\" && define.amd) {\n    define(['sortablejs'], function (Sortable) {\n      return buildDraggable(Sortable);\n    });\n  } else if (window && window.Vue && window.Sortable) {\n    var draggable = buildDraggable(window.Sortable);\n    Vue.component('draggable', draggable);\n  }\n})();\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0);\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// Hello.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a2b4dee2c209063e08a9","\n/* styles */\nrequire(\"!!C:\\\\Users\\\\andrey\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\vue-cli\\\\node_modules\\\\extract-text-webpack-plugin\\\\loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?-autoprefixer&sourceMap!../../node_modules/vue-loader/lib/style-rewriter?id=data-v-147968d2!postcss-loader?sourceMap!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Hello.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Hello.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-147968d2!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Hello.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Hello.vue\n// module id = 0\n// module chunks = 0","<template>\r\n  <div class=\"fluid container\">\r\n    <div class=\"form-group form-group-lg panel panel-default\">\r\n      <div class=\"panel-heading\">\r\n        <h3 class=\"panel-title\">Sortbale control</h3>\r\n      </div>\r\n      <div class=\"panel-body\">\r\n        <div class = \"checkbox\">\r\n          <label><input type = \"checkbox\" v-model=\"editable\">Enable drag and drop</label>      \r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-default\" @click=\"orderList\">Sort by original order</button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div  class=\"col-md-3\">\r\n        <draggable class=\"list-group\" element=\"ul\" v-model=\"list\" :options=\"dragOptions\" :move=\"onMove\" @start=\"isDragging=true\" @end=\"isDragging=false\"> \r\n          <transition-group type=\"transition\" :name=\"'flip-list'\">\r\n            <li class=\"list-group-item\" v-for=\"element in list\" :key=\"element.order\"> \r\n              <i :class=\"element.fixed? 'fa fa-anchor' : 'glyphicon glyphicon-pushpin'\" @click=\" element.fixed=! element.fixed\" aria-hidden=\"true\"></i>\r\n              {{element.name}}\r\n              <span class=\"badge\">{{element.order}}</span>\r\n            </li> \r\n          </transition-group>\r\n      </draggable>\r\n    </div>\r\n\r\n     <div  class=\"col-md-3\">\r\n      <draggable element=\"span\" v-model=\"list2\" :options=\"dragOptions\" :move=\"onMove\"> \r\n          <transition-group name=\"no\" class=\"list-group\" tag=\"ul\">\r\n            <li class=\"list-group-item\" v-for=\"element in list2\" :key=\"element.order\"> \r\n              <i :class=\"element.fixed? 'fa fa-anchor' : 'glyphicon glyphicon-pushpin'\" @click=\" element.fixed=! element.fixed\" aria-hidden=\"true\"></i>\r\n              {{element.name}}\r\n              <span class=\"badge\">{{element.order}}</span>\r\n            </li> \r\n          </transition-group>\r\n      </draggable>\r\n    </div>\r\n\r\n\r\n    <div  class=\"list-group col-md-3\">\r\n      <pre>{{listString}}</pre>\r\n    </div>\r\n     <div  class=\"list-group col-md-3\">\r\n      <pre>{{list2String}}</pre>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport draggable from 'vuedraggable'\r\nconst message = [ 'vue.draggable', 'draggable', 'component', 'for', 'vue.js 2.0', 'based' , 'on', 'Sortablejs' ]\r\n\r\nexport default {\r\n  name: 'hello',\r\n  components: {\r\n    draggable\r\n    \r\n  },\r\n  data () {\r\n    return {\r\n      list: message.map( (name,index) => {return {name, order: index+1, fixed: false}; }),\r\n      list2:[],\r\n      editable:true,\r\n      isDragging: false,\r\n      delayedDragging:false\r\n    }\r\n  },\r\n  methods:{\r\n    orderList () {\r\n      this.list = this.list.sort((one,two) =>{return one.order-two.order; })\r\n    },\r\n    onMove ({relatedContext, draggedContext}) {\r\n      const relatedElement = relatedContext.element;\r\n      const draggedElement = draggedContext.element;\r\n      return (!relatedElement || !relatedElement.fixed) && !draggedElement.fixed\r\n    }\r\n  },\r\n  computed: {\r\n    dragOptions () {\r\n      return  {\r\n        animation: 0,\r\n        group: 'description',\r\n        disabled: !this.editable,\r\n        ghostClass: 'ghost'\r\n      };\r\n    },\r\n    listString(){\r\n      return JSON.stringify(this.list, null, 2);  \r\n    },\r\n    list2String(){\r\n      return JSON.stringify(this.list2, null, 2);  \r\n    }\r\n  },\r\n  watch: {\r\n    isDragging (newValue) {\r\n      if (newValue){\r\n        this.delayedDragging= true\r\n        return\r\n      }\r\n      this.$nextTick( () =>{\r\n           this.delayedDragging =false\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.flip-list-move {\r\n  transition: transform 0.5s;\r\n}\r\n\r\n.no-move {\r\n  transition: transform 0s;\r\n}\r\n\r\n.ghost {\r\n  opacity: .5;\r\n  background: #C8EBFB;\r\n}\r\n\r\n.list-group {\r\n  min-height: 20px;\r\n}\r\n\r\n.list-group-item {\r\n  cursor: move;\r\n}\r\n\r\n.list-group-item i{\r\n  cursor: pointer;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// Hello.vue?270e31f8","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/json/stringify.js\n// module id = 3\n// module chunks = 0","var core  = require('../../modules/_core')\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/json/stringify.js\n// module id = 4\n// module chunks = 0","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_core.js\n// module id = 5\n// module chunks = 0","/**!\n * Sortable\n * @author\tRubaXa   <trash@rubaxa.org>\n * @license MIT\n */\n\n(function sortableModule(factory) {\n\t\"use strict\";\n\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine(factory);\n\t}\n\telse if (typeof module != \"undefined\" && typeof module.exports != \"undefined\") {\n\t\tmodule.exports = factory();\n\t}\n\telse {\n\t\t/* jshint sub:true */\n\t\twindow[\"Sortable\"] = factory();\n\t}\n})(function sortableFactory() {\n\t\"use strict\";\n\n\tif (typeof window == \"undefined\" || !window.document) {\n\t\treturn function sortableError() {\n\t\t\tthrow new Error(\"Sortable.js requires a window with a document\");\n\t\t};\n\t}\n\n\tvar dragEl,\n\t\tparentEl,\n\t\tghostEl,\n\t\tcloneEl,\n\t\trootEl,\n\t\tnextEl,\n\t\tlastDownEl,\n\n\t\tscrollEl,\n\t\tscrollParentEl,\n\t\tscrollCustomFn,\n\n\t\tlastEl,\n\t\tlastCSS,\n\t\tlastParentCSS,\n\n\t\toldIndex,\n\t\tnewIndex,\n\n\t\tactiveGroup,\n\t\tputSortable,\n\n\t\tautoScroll = {},\n\n\t\ttapEvt,\n\t\ttouchEvt,\n\n\t\tmoved,\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\t\tR_FLOAT = /left|right|inline/,\n\n\t\texpando = 'Sortable' + (new Date).getTime(),\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\n\t\t$ = win.jQuery || win.Zepto,\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = false,\n\n\t\tsupportDraggable = !!('draggable' in document.createElement('div')),\n\t\tsupportCssPointerEvents = (function (el) {\n\t\t\t// false when IE11\n\t\t\tif (!!navigator.userAgent.match(/Trident.*rv[ :]?11\\./)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tel = document.createElement('x');\n\t\t\tel.style.cssText = 'pointer-events:auto';\n\t\t\treturn el.style.pointerEvents === 'auto';\n\t\t})(),\n\n\t\t_silent = false,\n\n\t\tabs = Math.abs,\n\t\tmin = Math.min,\n\n\t\tsavedInputChecked = [],\n\t\ttouchDragOverListeners = [],\n\n\t\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl) {\n\t\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n\t\t\tif (rootEl && options.scroll) {\n\t\t\t\tvar _this = rootEl[expando],\n\t\t\t\t\tel,\n\t\t\t\t\trect,\n\t\t\t\t\tsens = options.scrollSensitivity,\n\t\t\t\t\tspeed = options.scrollSpeed,\n\n\t\t\t\t\tx = evt.clientX,\n\t\t\t\t\ty = evt.clientY,\n\n\t\t\t\t\twinWidth = window.innerWidth,\n\t\t\t\t\twinHeight = window.innerHeight,\n\n\t\t\t\t\tvx,\n\t\t\t\t\tvy,\n\n\t\t\t\t\tscrollOffsetX,\n\t\t\t\t\tscrollOffsetY\n\t\t\t\t;\n\n\t\t\t\t// Delect scrollEl\n\t\t\t\tif (scrollParentEl !== rootEl) {\n\t\t\t\t\tscrollEl = options.scroll;\n\t\t\t\t\tscrollParentEl = rootEl;\n\t\t\t\t\tscrollCustomFn = options.scrollFn;\n\n\t\t\t\t\tif (scrollEl === true) {\n\t\t\t\t\t\tscrollEl = rootEl;\n\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif ((scrollEl.offsetWidth < scrollEl.scrollWidth) ||\n\t\t\t\t\t\t\t\t(scrollEl.offsetHeight < scrollEl.scrollHeight)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\t\t} while (scrollEl = scrollEl.parentNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (scrollEl) {\n\t\t\t\t\tel = scrollEl;\n\t\t\t\t\trect = scrollEl.getBoundingClientRect();\n\t\t\t\t\tvx = (abs(rect.right - x) <= sens) - (abs(rect.left - x) <= sens);\n\t\t\t\t\tvy = (abs(rect.bottom - y) <= sens) - (abs(rect.top - y) <= sens);\n\t\t\t\t}\n\n\n\t\t\t\tif (!(vx || vy)) {\n\t\t\t\t\tvx = (winWidth - x <= sens) - (x <= sens);\n\t\t\t\t\tvy = (winHeight - y <= sens) - (y <= sens);\n\n\t\t\t\t\t/* jshint expr:true */\n\t\t\t\t\t(vx || vy) && (el = win);\n\t\t\t\t}\n\n\n\t\t\t\tif (autoScroll.vx !== vx || autoScroll.vy !== vy || autoScroll.el !== el) {\n\t\t\t\t\tautoScroll.el = el;\n\t\t\t\t\tautoScroll.vx = vx;\n\t\t\t\t\tautoScroll.vy = vy;\n\n\t\t\t\t\tclearInterval(autoScroll.pid);\n\n\t\t\t\t\tif (el) {\n\t\t\t\t\t\tautoScroll.pid = setInterval(function () {\n\t\t\t\t\t\t\tscrollOffsetY = vy ? vy * speed : 0;\n\t\t\t\t\t\t\tscrollOffsetX = vx ? vx * speed : 0;\n\n\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\n\t\t\t\t\t\t\t\treturn scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (el === win) {\n\t\t\t\t\t\t\t\twin.scrollTo(win.pageXOffset + scrollOffsetX, win.pageYOffset + scrollOffsetY);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tel.scrollTop += scrollOffsetY;\n\t\t\t\t\t\t\t\tel.scrollLeft += scrollOffsetX;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 24);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, 30),\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\tif (value === void 0 || value === true) {\n\t\t\t\t\tvalue = group.name;\n\t\t\t\t}\n\n\t\t\t\tif (typeof value === 'function') {\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\treturn function (to, from) {\n\t\t\t\t\t\tvar fromGroup = from.options.group.name;\n\n\t\t\t\t\t\treturn pull\n\t\t\t\t\t\t\t? value\n\t\t\t\t\t\t\t: value && (value.join\n\t\t\t\t\t\t\t\t? value.indexOf(fromGroup) > -1\n\t\t\t\t\t\t\t\t: (fromGroup == value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t}\n\t;\n\n\n\t/**\n\t * @class  Sortable\n\t * @param  {HTMLElement}  el\n\t * @param  {Object}       [options]\n\t */\n\tfunction Sortable(el, options) {\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, and not ' + {}.toString.call(el);\n\t\t}\n\n\t\tthis.el = el; // root element\n\t\tthis.options = options = _extend({}, options);\n\n\n\t\t// Export instance\n\t\tel[expando] = this;\n\n\t\t// Default options\n\t\tvar defaults = {\n\t\t\tgroup: Math.random(),\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? 'li' : '>*',\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackOnBody: false,\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0}\n\t\t};\n\n\n\t\t// Set default options\n\t\tfor (var name in defaults) {\n\t\t\t!(name in options) && (options[name] = defaults[name]);\n\t\t}\n\n\t\t_prepareGroup(options);\n\n\t\t// Bind all private methods\n\t\tfor (var fn in this) {\n\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t}\n\t\t}\n\n\t\t// Setup drag mode\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\t// Bind events\n\t\t_on(el, 'mousedown', this._onTapStart);\n\t\t_on(el, 'touchstart', this._onTapStart);\n\t\t_on(el, 'pointerdown', this._onTapStart);\n\n\t\tif (this.nativeDraggable) {\n\t\t\t_on(el, 'dragover', this);\n\t\t\t_on(el, 'dragenter', this);\n\t\t}\n\n\t\ttouchDragOverListeners.push(this._onDragOver);\n\n\t\t// Restore sorting\n\t\toptions.store && this.sort(options.store.get(this));\n\t}\n\n\n\tSortable.prototype = /** @lends Sortable.prototype */ {\n\t\tconstructor: Sortable,\n\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\n\t\t\tvar _this = this,\n\t\t\t\tel = this.el,\n\t\t\t\toptions = this.options,\n\t\t\t\tpreventOnFilter = options.preventOnFilter,\n\t\t\t\ttype = evt.type,\n\t\t\t\ttouch = evt.touches && evt.touches[0],\n\t\t\t\ttarget = (touch || evt).target,\n\t\t\t\toriginalTarget = evt.target.shadowRoot && evt.path[0] || target,\n\t\t\t\tfilter = options.filter,\n\t\t\t\tstartIndex;\n\n\t\t\t_saveInputCheckedState(el);\n\n\n\t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\t\t\tif (dragEl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (type === 'mousedown' && evt.button !== 0 || options.disabled) {\n\t\t\t\treturn; // only left button or enabled\n\t\t\t}\n\n\n\t\t\ttarget = _closest(target, options.draggable, el);\n\n\t\t\tif (!target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (lastDownEl === target) {\n\t\t\t\t// Ignoring duplicate `down`\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get the index of the dragged element within its parent\n\t\t\tstartIndex = _index(target, options.draggable);\n\n\t\t\t// Check filter\n\t\t\tif (typeof filter === 'function') {\n\t\t\t\tif (filter.call(this, evt, target, this)) {\n\t\t\t\t\t_dispatchEvent(_this, originalTarget, 'filter', target, el, startIndex);\n\t\t\t\t\tpreventOnFilter && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (filter) {\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\n\t\t\t\t\tcriteria = _closest(originalTarget, criteria.trim(), el);\n\n\t\t\t\t\tif (criteria) {\n\t\t\t\t\t\t_dispatchEvent(_this, criteria, 'filter', target, el, startIndex);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tpreventOnFilter && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.handle && !_closest(originalTarget, options.handle, el)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare `dragstart`\n\t\t\tthis._prepareDragStart(evt, touch, target, startIndex);\n\t\t},\n\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex) {\n\t\t\tvar _this = this,\n\t\t\t\tel = _this.el,\n\t\t\t\toptions = _this.options,\n\t\t\t\townerDocument = el.ownerDocument,\n\t\t\t\tdragStartFn;\n\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\n\t\t\t\ttapEvt = evt;\n\n\t\t\t\trootEl = el;\n\t\t\t\tdragEl = target;\n\t\t\t\tparentEl = dragEl.parentNode;\n\t\t\t\tnextEl = dragEl.nextSibling;\n\t\t\t\tlastDownEl = target;\n\t\t\t\tactiveGroup = options.group;\n\t\t\t\toldIndex = startIndex;\n\n\t\t\t\tthis._lastX = (touch || evt).clientX;\n\t\t\t\tthis._lastY = (touch || evt).clientY;\n\n\t\t\t\tdragEl.style['will-change'] = 'transform';\n\n\t\t\t\tdragStartFn = function () {\n\t\t\t\t\t// Delayed drag has been triggered\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\n\t\t\t\t\t_this._disableDelayedDrag();\n\n\t\t\t\t\t// Make the element draggable\n\t\t\t\t\tdragEl.draggable = _this.nativeDraggable;\n\n\t\t\t\t\t// Chosen item\n\t\t\t\t\t_toggleClass(dragEl, options.chosenClass, true);\n\n\t\t\t\t\t// Bind the events: dragstart/dragend\n\t\t\t\t\t_this._triggerDragStart(evt, touch);\n\n\t\t\t\t\t// Drag start event\n\t\t\t\t\t_dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, oldIndex);\n\t\t\t\t};\n\n\t\t\t\t// Disable \"draggable\"\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\n\t\t\t\t});\n\n\t\t\t\t_on(ownerDocument, 'mouseup', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchend', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchcancel', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'pointercancel', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'selectstart', _this);\n\n\t\t\t\tif (options.delay) {\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\n\t\t\t\t\t// before the delay has been reached:\n\t\t\t\t\t// disable the delayed drag\n\t\t\t\t\t_on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'mousemove', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchmove', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'pointermove', _this._disableDelayedDrag);\n\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n\t\t\t\t} else {\n\t\t\t\t\tdragStartFn();\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t},\n\n\t\t_disableDelayedDrag: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\t\t\t_off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchend', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'mousemove', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchmove', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'pointermove', this._disableDelayedDrag);\n\t\t},\n\n\t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\n\t\t\ttouch = touch || (evt.pointerType == 'touch' ? evt : null);\n\n\t\t\tif (touch) {\n\t\t\t\t// Touch device support\n\t\t\t\ttapEvt = {\n\t\t\t\t\ttarget: dragEl,\n\t\t\t\t\tclientX: touch.clientX,\n\t\t\t\t\tclientY: touch.clientY\n\t\t\t\t};\n\n\t\t\t\tthis._onDragStart(tapEvt, 'touch');\n\t\t\t}\n\t\t\telse if (!this.nativeDraggable) {\n\t\t\t\tthis._onDragStart(tapEvt, true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_on(dragEl, 'dragend', this);\n\t\t\t\t_on(rootEl, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (document.selection) {\n\t\t\t\t\t// Timeout neccessary for IE9\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t}\n\t\t},\n\n\t\t_dragStarted: function () {\n\t\t\tif (rootEl && dragEl) {\n\t\t\t\tvar options = this.options;\n\n\t\t\t\t// Apply effect\n\t\t\t\t_toggleClass(dragEl, options.ghostClass, true);\n\t\t\t\t_toggleClass(dragEl, options.dragClass, false);\n\n\t\t\t\tSortable.active = this;\n\n\t\t\t\t// Drag start event\n\t\t\t\t_dispatchEvent(this, rootEl, 'start', dragEl, rootEl, oldIndex);\n\t\t\t} else {\n\t\t\t\tthis._nulling();\n\t\t\t}\n\t\t},\n\n\t\t_emulateDragOver: function () {\n\t\t\tif (touchEvt) {\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._lastX = touchEvt.clientX;\n\t\t\t\tthis._lastY = touchEvt.clientY;\n\n\t\t\t\tif (!supportCssPointerEvents) {\n\t\t\t\t\t_css(ghostEl, 'display', 'none');\n\t\t\t\t}\n\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY),\n\t\t\t\t\tparent = target,\n\t\t\t\t\ti = touchDragOverListeners.length;\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (parent[expando]) {\n\t\t\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\t\t\ttouchDragOverListeners[i]({\n\t\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\n\t\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\n\t\t\t\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\t\t\t\trootEl: parent\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget = parent; // store last element\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\twhile (parent = parent.parentNode);\n\t\t\t\t}\n\n\t\t\t\tif (!supportCssPointerEvents) {\n\t\t\t\t\t_css(ghostEl, 'display', '');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t_onTouchMove: function (/**TouchEvent*/evt) {\n\t\t\tif (tapEvt) {\n\t\t\t\tvar\toptions = this.options,\n\t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\n\t\t\t\t\tfallbackOffset = options.fallbackOffset,\n\t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\n\t\t\t\t\tdx = (touch.clientX - tapEvt.clientX) + fallbackOffset.x,\n\t\t\t\t\tdy = (touch.clientY - tapEvt.clientY) + fallbackOffset.y,\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\n\n\t\t\t\t// only set the status to dragging, when we are actually dragging\n\t\t\t\tif (!Sortable.active) {\n\t\t\t\t\tif (fallbackTolerance &&\n\t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._dragStarted();\n\t\t\t\t}\n\n\t\t\t\t// as well as creating the ghost element on the document body\n\t\t\t\tthis._appendGhost();\n\n\t\t\t\tmoved = true;\n\t\t\t\ttouchEvt = touch;\n\n\t\t\t\t_css(ghostEl, 'webkitTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'mozTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'msTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'transform', translate3d);\n\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t_appendGhost: function () {\n\t\t\tif (!ghostEl) {\n\t\t\t\tvar rect = dragEl.getBoundingClientRect(),\n\t\t\t\t\tcss = _css(dragEl),\n\t\t\t\t\toptions = this.options,\n\t\t\t\t\tghostRect;\n\n\t\t\t\tghostEl = dragEl.cloneNode(true);\n\n\t\t\t\t_toggleClass(ghostEl, options.ghostClass, false);\n\t\t\t\t_toggleClass(ghostEl, options.fallbackClass, true);\n\t\t\t\t_toggleClass(ghostEl, options.dragClass, true);\n\n\t\t\t\t_css(ghostEl, 'top', rect.top - parseInt(css.marginTop, 10));\n\t\t\t\t_css(ghostEl, 'left', rect.left - parseInt(css.marginLeft, 10));\n\t\t\t\t_css(ghostEl, 'width', rect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height);\n\t\t\t\t_css(ghostEl, 'opacity', '0.8');\n\t\t\t\t_css(ghostEl, 'position', 'fixed');\n\t\t\t\t_css(ghostEl, 'zIndex', '100000');\n\t\t\t\t_css(ghostEl, 'pointerEvents', 'none');\n\n\t\t\t\toptions.fallbackOnBody && document.body.appendChild(ghostEl) || rootEl.appendChild(ghostEl);\n\n\t\t\t\t// Fixing dimensions.\n\t\t\t\tghostRect = ghostEl.getBoundingClientRect();\n\t\t\t\t_css(ghostEl, 'width', rect.width * 2 - ghostRect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height * 2 - ghostRect.height);\n\t\t\t}\n\t\t},\n\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/useFallback) {\n\t\t\tvar dataTransfer = evt.dataTransfer,\n\t\t\t\toptions = this.options;\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (activeGroup.checkPull(this, this, dragEl, evt)) {\n\t\t\t\tcloneEl = _clone(dragEl);\n\n\t\t\t\tcloneEl.draggable = false;\n\t\t\t\tcloneEl.style['will-change'] = '';\n\n\t\t\t\t_css(cloneEl, 'display', 'none');\n\t\t\t\t_toggleClass(cloneEl, this.options.chosenClass, false);\n\n\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t_dispatchEvent(this, rootEl, 'clone', dragEl);\n\t\t\t}\n\n\t\t\t_toggleClass(dragEl, options.dragClass, true);\n\n\t\t\tif (useFallback) {\n\t\t\t\tif (useFallback === 'touch') {\n\t\t\t\t\t// Bind touch events\n\t\t\t\t\t_on(document, 'touchmove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'touchend', this._onDrop);\n\t\t\t\t\t_on(document, 'touchcancel', this._onDrop);\n\t\t\t\t\t_on(document, 'pointermove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'pointerup', this._onDrop);\n\t\t\t\t} else {\n\t\t\t\t\t// Old brwoser\n\t\t\t\t\t_on(document, 'mousemove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'mouseup', this._onDrop);\n\t\t\t\t}\n\n\t\t\t\tthis._loopId = setInterval(this._emulateDragOver, 50);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (dataTransfer) {\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\n\t\t\t\t\toptions.setData && options.setData.call(this, dataTransfer, dragEl);\n\t\t\t\t}\n\n\t\t\t\t_on(document, 'drop', this);\n\t\t\t\tsetTimeout(this._dragStarted, 0);\n\t\t\t}\n\t\t},\n\n\t\t_onDragOver: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\ttarget,\n\t\t\t\tdragRect,\n\t\t\t\ttargetRect,\n\t\t\t\trevert,\n\t\t\t\toptions = this.options,\n\t\t\t\tgroup = options.group,\n\t\t\t\tactiveSortable = Sortable.active,\n\t\t\t\tisOwner = (activeGroup === group),\n\t\t\t\tisMovingBetweenSortable = false,\n\t\t\t\tcanSort = options.sort;\n\n\t\t\tif (evt.preventDefault !== void 0) {\n\t\t\t\tevt.preventDefault();\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation();\n\t\t\t}\n\n\t\t\tif (dragEl.animated) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmoved = true;\n\n\t\t\tif (activeSortable && !options.disabled &&\n\t\t\t\t(isOwner\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n\t\t\t\t\t: (\n\t\t\t\t\t\tputSortable === this ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(activeSortable.lastPullMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t) &&\n\t\t\t\t(evt.rootEl === void 0 || evt.rootEl === this.el) // touch fallback\n\t\t\t) {\n\t\t\t\t// Smart auto-scrolling\n\t\t\t\t_autoScroll(evt, options, this.el);\n\n\t\t\t\tif (_silent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttarget = _closest(evt.target, options.draggable, el);\n\t\t\t\tdragRect = dragEl.getBoundingClientRect();\n\n\t\t\t\tif (putSortable !== this) {\n\t\t\t\t\tputSortable = this;\n\t\t\t\t\tisMovingBetweenSortable = true;\n\t\t\t\t}\n\n\t\t\t\tif (revert) {\n\t\t\t\t\t_cloneHide(activeSortable, true);\n\t\t\t\t\tparentEl = rootEl; // actualization\n\n\t\t\t\t\tif (cloneEl || nextEl) {\n\t\t\t\t\t\trootEl.insertBefore(dragEl, cloneEl || nextEl);\n\t\t\t\t\t}\n\t\t\t\t\telse if (!canSort) {\n\t\t\t\t\t\trootEl.appendChild(dragEl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\tif ((el.children.length === 0) || (el.children[0] === ghostEl) ||\n\t\t\t\t\t(el === evt.target) && (_ghostIsLast(el, evt))\n\t\t\t\t) {\n\t\t\t\t\t//assign target only if condition is true\n\t\t\t\t\tif (el.children.length !== 0 && el.children[0] !== ghostEl && el === evt.target) {\n\t\t\t\t\t\ttarget = el.lastElementChild;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\tif (target.animated) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetRect = target.getBoundingClientRect();\n\t\t\t\t\t}\n\n\t\t\t\t\t_cloneHide(activeSortable, isOwner);\n\n\t\t\t\t\tif (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt) !== false) {\n\t\t\t\t\t\tif (!dragEl.contains(el)) {\n\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t\tparentEl = el; // actualization\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\ttarget && this._animate(targetRect, target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (target && !target.animated && target !== dragEl && (target.parentNode[expando] !== void 0)) {\n\t\t\t\t\tif (lastEl !== target) {\n\t\t\t\t\t\tlastEl = target;\n\t\t\t\t\t\tlastCSS = _css(target);\n\t\t\t\t\t\tlastParentCSS = _css(target.parentNode);\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetRect = target.getBoundingClientRect();\n\n\t\t\t\t\tvar width = targetRect.right - targetRect.left,\n\t\t\t\t\t\theight = targetRect.bottom - targetRect.top,\n\t\t\t\t\t\tfloating = R_FLOAT.test(lastCSS.cssFloat + lastCSS.display)\n\t\t\t\t\t\t\t|| (lastParentCSS.display == 'flex' && lastParentCSS['flex-direction'].indexOf('row') === 0),\n\t\t\t\t\t\tisWide = (target.offsetWidth > dragEl.offsetWidth),\n\t\t\t\t\t\tisLong = (target.offsetHeight > dragEl.offsetHeight),\n\t\t\t\t\t\thalfway = (floating ? (evt.clientX - targetRect.left) / width : (evt.clientY - targetRect.top) / height) > 0.5,\n\t\t\t\t\t\tnextSibling = target.nextElementSibling,\n\t\t\t\t\t\tafter = false\n\t\t\t\t\t;\n\n\t\t\t\t\tif (floating) {\n\t\t\t\t\t\tvar elTop = dragEl.offsetTop,\n\t\t\t\t\t\t\ttgTop = target.offsetTop;\n\n\t\t\t\t\t\tif (elTop === tgTop) {\n\t\t\t\t\t\t\tafter = (target.previousElementSibling === dragEl) && !isWide || halfway && isWide;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (target.previousElementSibling === dragEl || dragEl.previousElementSibling === target) {\n\t\t\t\t\t\t\tafter = (evt.clientY - targetRect.top) / height > 0.5;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tafter = tgTop > elTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (!isMovingBetweenSortable) {\n\t\t\t\t\t\tafter = (nextSibling !== dragEl) && !isLong || halfway && isLong;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n\t\t\t\t\tif (moveVector !== false) {\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n\t\t\t\t\t\t\tafter = (moveVector === 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_silent = true;\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\t\t_cloneHide(activeSortable, isOwner);\n\n\t\t\t\t\t\tif (!dragEl.contains(el)) {\n\t\t\t\t\t\t\tif (after && !nextSibling) {\n\t\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\n\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\tthis._animate(targetRect, target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = target.getBoundingClientRect();\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = prevRect.getBoundingClientRect();\n\t\t\t\t}\n\n\t\t\t\t_css(target, 'transition', 'none');\n\t\t\t\t_css(target, 'transform', 'translate3d('\n\t\t\t\t\t+ (prevRect.left - currentRect.left) + 'px,'\n\t\t\t\t\t+ (prevRect.top - currentRect.top) + 'px,0)'\n\t\t\t\t);\n\n\t\t\t\ttarget.offsetWidth; // repaint\n\n\t\t\t\t_css(target, 'transition', 'all ' + ms + 'ms');\n\t\t\t\t_css(target, 'transform', 'translate3d(0,0,0)');\n\n\t\t\t\tclearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\t_css(target, 'transition', '');\n\t\t\t\t\t_css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n\t\t_offUpEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\t_off(document, 'touchmove', this._onTouchMove);\n\t\t\t_off(document, 'pointermove', this._onTouchMove);\n\t\t\t_off(ownerDocument, 'mouseup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchend', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointerup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchcancel', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointercancel', this._onDrop);\n\t\t\t_off(ownerDocument, 'selectstart', this);\n\t\t},\n\n\t\t_onDrop: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\toptions = this.options;\n\n\t\t\tclearInterval(this._loopId);\n\t\t\tclearInterval(autoScroll.pid);\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\t// Unbind events\n\t\t\t_off(document, 'mousemove', this._onTouchMove);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(document, 'drop', this);\n\t\t\t\t_off(el, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (evt) {\n\t\t\t\tif (moved) {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\tghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n\t\t\t\tif (rootEl === parentEl || Sortable.active.lastPullMode !== 'clone') {\n\t\t\t\t\t// Remove clone\n\t\t\t\t\tcloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (dragEl) {\n\t\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\t\t_off(dragEl, 'dragend', this);\n\t\t\t\t\t}\n\n\t\t\t\t\t_disableDraggable(dragEl);\n\t\t\t\t\tdragEl.style['will-change'] = '';\n\n\t\t\t\t\t// Remove class's\n\t\t\t\t\t_toggleClass(dragEl, this.options.ghostClass, false);\n\t\t\t\t\t_toggleClass(dragEl, this.options.chosenClass, false);\n\n\t\t\t\t\t// Drag stop event\n\t\t\t\t\t_dispatchEvent(this, rootEl, 'unchoose', dragEl, rootEl, oldIndex);\n\n\t\t\t\t\tif (rootEl !== parentEl) {\n\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'add', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'remove', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t\t// drag from one list and drop into another\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n\t\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t\t// drag & drop within the same list\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'update', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Sortable.active) {\n\t\t\t\t\t\t/* jshint eqnull:true */\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\n\t\t\t\t\t\t\tnewIndex = oldIndex;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'end', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t// Save sorting\n\t\t\t\t\t\tthis.save();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._nulling();\n\t\t},\n\n\t\t_nulling: function() {\n\t\t\trootEl =\n\t\t\tdragEl =\n\t\t\tparentEl =\n\t\t\tghostEl =\n\t\t\tnextEl =\n\t\t\tcloneEl =\n\t\t\tlastDownEl =\n\n\t\t\tscrollEl =\n\t\t\tscrollParentEl =\n\n\t\t\ttapEvt =\n\t\t\ttouchEvt =\n\n\t\t\tmoved =\n\t\t\tnewIndex =\n\n\t\t\tlastEl =\n\t\t\tlastCSS =\n\n\t\t\tputSortable =\n\t\t\tactiveGroup =\n\t\t\tSortable.active = null;\n\n\t\t\tsavedInputChecked.forEach(function (el) {\n\t\t\t\tel.checked = true;\n\t\t\t});\n\t\t\tsavedInputChecked.length = 0;\n\t\t},\n\n\t\thandleEvent: function (/**Event*/evt) {\n\t\t\tswitch (evt.type) {\n\t\t\t\tcase 'drop':\n\t\t\t\tcase 'dragend':\n\t\t\t\t\tthis._onDrop(evt);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dragover':\n\t\t\t\tcase 'dragenter':\n\t\t\t\t\tif (dragEl) {\n\t\t\t\t\t\tthis._onDragOver(evt);\n\t\t\t\t\t\t_globalDragOver(evt);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'selectstart':\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (_closest(el, options.draggable, this.el)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (_closest(el, this.options.draggable, rootEl)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn _closest(el, selector || this.options.draggable, this.el);\n\t\t},\n\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[expando] = null;\n\n\t\t\t_off(el, 'mousedown', this._onTapStart);\n\t\t\t_off(el, 'touchstart', this._onTapStart);\n\t\t\t_off(el, 'pointerdown', this._onTapStart);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(el, 'dragover', this);\n\t\t\t\t_off(el, 'dragenter', this);\n\t\t\t}\n\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\ttouchDragOverListeners.splice(touchDragOverListeners.indexOf(this._onDragOver), 1);\n\n\t\t\tthis._onDrop();\n\n\t\t\tthis.el = el = null;\n\t\t}\n\t};\n\n\n\tfunction _cloneHide(sortable, state) {\n\t\tif (sortable.lastPullMode !== 'clone') {\n\t\t\tstate = true;\n\t\t}\n\n\t\tif (cloneEl && (cloneEl.state !== state)) {\n\t\t\t_css(cloneEl, 'display', state ? 'none' : '');\n\n\t\t\tif (!state) {\n\t\t\t\tif (cloneEl.state) {\n\t\t\t\t\tif (sortable.options.group.revertClone) {\n\t\t\t\t\t\trootEl.insertBefore(cloneEl, nextEl);\n\t\t\t\t\t\tsortable._animate(dragEl, cloneEl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcloneEl.state = state;\n\t\t}\n\t}\n\n\n\tfunction _closest(/**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx) {\n\t\tif (el) {\n\t\t\tctx = ctx || document;\n\n\t\t\tdo {\n\t\t\t\tif ((selector === '>*' && el.parentNode === ctx) || _matches(el, selector)) {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t\t/* jshint boss:true */\n\t\t\t} while (el = _getParentOrHost(el));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\tfunction _getParentOrHost(el) {\n\t\tvar parent = el.host;\n\n\t\treturn (parent && parent.nodeType) ? parent : el.parentNode;\n\t}\n\n\n\tfunction _globalDragOver(/**Event*/evt) {\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t}\n\t\tevt.preventDefault();\n\t}\n\n\n\tfunction _on(el, event, fn) {\n\t\tel.addEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _off(el, event, fn) {\n\t\tel.removeEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _toggleClass(el, name, state) {\n\t\tif (el) {\n\t\t\tif (el.classList) {\n\t\t\t\tel.classList[state ? 'add' : 'remove'](name);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n\t\t\t\tel.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _css(el, prop, val) {\n\t\tvar style = el && el.style;\n\n\t\tif (style) {\n\t\t\tif (val === void 0) {\n\t\t\t\tif (document.defaultView && document.defaultView.getComputedStyle) {\n\t\t\t\t\tval = document.defaultView.getComputedStyle(el, '');\n\t\t\t\t}\n\t\t\t\telse if (el.currentStyle) {\n\t\t\t\t\tval = el.currentStyle;\n\t\t\t\t}\n\n\t\t\t\treturn prop === void 0 ? val : val[prop];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!(prop in style)) {\n\t\t\t\t\tprop = '-webkit-' + prop;\n\t\t\t\t}\n\n\t\t\t\tstyle[prop] = val + (typeof val === 'string' ? '' : 'px');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _find(ctx, tagName, iterator) {\n\t\tif (ctx) {\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n\n\t\t\tif (iterator) {\n\t\t\t\tfor (; i < n; i++) {\n\t\t\t\t\titerator(list[i], i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\n\n\tfunction _dispatchEvent(sortable, rootEl, name, targetEl, fromEl, startIndex, newIndex) {\n\t\tsortable = (sortable || rootEl[expando]);\n\n\t\tvar evt = document.createEvent('Event'),\n\t\t\toptions = sortable.options,\n\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n\n\t\tevt.initEvent(name, true, true);\n\n\t\tevt.to = rootEl;\n\t\tevt.from = fromEl || rootEl;\n\t\tevt.item = targetEl || rootEl;\n\t\tevt.clone = cloneEl;\n\n\t\tevt.oldIndex = startIndex;\n\t\tevt.newIndex = newIndex;\n\n\t\trootEl.dispatchEvent(evt);\n\n\t\tif (options[onName]) {\n\t\t\toptions[onName].call(sortable, evt);\n\t\t}\n\t}\n\n\n\tfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\n\t\tvar evt,\n\t\t\tsortable = fromEl[expando],\n\t\t\tonMoveFn = sortable.options.onMove,\n\t\t\tretVal;\n\n\t\tevt = document.createEvent('Event');\n\t\tevt.initEvent('move', true, true);\n\n\t\tevt.to = toEl;\n\t\tevt.from = fromEl;\n\t\tevt.dragged = dragEl;\n\t\tevt.draggedRect = dragRect;\n\t\tevt.related = targetEl || toEl;\n\t\tevt.relatedRect = targetRect || toEl.getBoundingClientRect();\n\t\tevt.willInsertAfter = willInsertAfter;\n\n\t\tfromEl.dispatchEvent(evt);\n\n\t\tif (onMoveFn) {\n\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\n\t\t}\n\n\t\treturn retVal;\n\t}\n\n\n\tfunction _disableDraggable(el) {\n\t\tel.draggable = false;\n\t}\n\n\n\tfunction _unsilent() {\n\t\t_silent = false;\n\t}\n\n\n\t/** @returns {HTMLElement|false} */\n\tfunction _ghostIsLast(el, evt) {\n\t\tvar lastEl = el.lastElementChild,\n\t\t\trect = lastEl.getBoundingClientRect();\n\n\t\t// 5 — min delta\n\t\t// abs — нельзя добавлять, а то глюки при наведении сверху\n\t\treturn (evt.clientY - (rect.top + rect.height) > 5) ||\n\t\t\t(evt.clientX - (rect.left + rect.width) > 5);\n\t}\n\n\n\t/**\n\t * Generate id\n\t * @param   {HTMLElement} el\n\t * @returns {String}\n\t * @private\n\t */\n\tfunction _generateId(el) {\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\n\t\t\ti = str.length,\n\t\t\tsum = 0;\n\n\t\twhile (i--) {\n\t\t\tsum += str.charCodeAt(i);\n\t\t}\n\n\t\treturn sum.toString(36);\n\t}\n\n\t/**\n\t * Returns the index of an element within its parent for a selected set of\n\t * elements\n\t * @param  {HTMLElement} el\n\t * @param  {selector} selector\n\t * @return {number}\n\t */\n\tfunction _index(el, selector) {\n\t\tvar index = 0;\n\n\t\tif (!el || !el.parentNode) {\n\t\t\treturn -1;\n\t\t}\n\n\t\twhile (el && (el = el.previousElementSibling)) {\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && (selector === '>*' || _matches(el, selector))) {\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tfunction _matches(/**HTMLElement*/el, /**String*/selector) {\n\t\tif (el) {\n\t\t\tselector = selector.split('.');\n\n\t\t\tvar tag = selector.shift().toUpperCase(),\n\t\t\t\tre = new RegExp('\\\\s(' + selector.join('|') + ')(?=\\\\s)', 'g');\n\n\t\t\treturn (\n\t\t\t\t(tag === '' || el.nodeName.toUpperCase() == tag) &&\n\t\t\t\t(!selector.length || ((' ' + el.className + ' ').match(re) || []).length == selector.length)\n\t\t\t);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction _throttle(callback, ms) {\n\t\tvar args, _this;\n\n\t\treturn function () {\n\t\t\tif (args === void 0) {\n\t\t\t\targs = arguments;\n\t\t\t\t_this = this;\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (args.length === 1) {\n\t\t\t\t\t\tcallback.call(_this, args[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback.apply(_this, args);\n\t\t\t\t\t}\n\n\t\t\t\t\targs = void 0;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction _extend(dst, src) {\n\t\tif (dst && src) {\n\t\t\tfor (var key in src) {\n\t\t\t\tif (src.hasOwnProperty(key)) {\n\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\n\tfunction _clone(el) {\n\t\treturn $\n\t\t\t? $(el).clone(true)[0]\n\t\t\t: (Polymer && Polymer.dom\n\t\t\t\t? Polymer.dom(el).cloneNode(true)\n\t\t\t\t: el.cloneNode(true)\n\t\t\t);\n\t}\n\n\tfunction _saveInputCheckedState(root) {\n\t\tvar inputs = root.getElementsByTagName('input');\n\t\tvar idx = inputs.length;\n\n\t\twhile (idx--) {\n\t\t\tvar el = inputs[idx];\n\t\t\tel.checked && savedInputChecked.push(el);\n\t\t}\n\t}\n\n\t// Fixed #973: \n\t_on(document, 'touchmove', function (evt) {\n\t\tif (Sortable.active) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t});\n\n\ttry {\n\t\twindow.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n\t\t\tget: function () {\n\t\t\t\tcaptureMode = {\n\t\t\t\t\tcapture: false,\n\t\t\t\t\tpassive: false\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t} catch (err) {}\n\n\t// Export utils\n\tSortable.utils = {\n\t\ton: _on,\n\t\toff: _off,\n\t\tcss: _css,\n\t\tfind: _find,\n\t\tis: function (el, selector) {\n\t\t\treturn !!_closest(el, selector, el);\n\t\t},\n\t\textend: _extend,\n\t\tthrottle: _throttle,\n\t\tclosest: _closest,\n\t\ttoggleClass: _toggleClass,\n\t\tclone: _clone,\n\t\tindex: _index\n\t};\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.6.0';\n\treturn Sortable;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/sortablejs/Sortable.js\n// module id = 6\n// module chunks = 0","module.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 7\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"fluid container\"\n  }, [_c('div', {\n    staticClass: \"form-group form-group-lg panel panel-default\"\n  }, [_vm._m(0), _vm._v(\" \"), _c('div', {\n    staticClass: \"panel-body\"\n  }, [_c('div', {\n    staticClass: \"checkbox\"\n  }, [_c('label', [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.editable),\n      expression: \"editable\"\n    }],\n    attrs: {\n      \"type\": \"checkbox\"\n    },\n    domProps: {\n      \"checked\": Array.isArray(_vm.editable) ? _vm._i(_vm.editable, null) > -1 : (_vm.editable)\n    },\n    on: {\n      \"__c\": function($event) {\n        var $$a = _vm.editable,\n          $$el = $event.target,\n          $$c = $$el.checked ? (true) : (false);\n        if (Array.isArray($$a)) {\n          var $$v = null,\n            $$i = _vm._i($$a, $$v);\n          if ($$c) {\n            $$i < 0 && (_vm.editable = $$a.concat($$v))\n          } else {\n            $$i > -1 && (_vm.editable = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))\n          }\n        } else {\n          _vm.editable = $$c\n        }\n      }\n    }\n  }), _vm._v(\"Enable drag and drop\")])]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-default\",\n    attrs: {\n      \"type\": \"button\"\n    },\n    on: {\n      \"click\": _vm.orderList\n    }\n  }, [_vm._v(\"Sort by original order\")])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-md-3\"\n  }, [_c('draggable', {\n    staticClass: \"list-group\",\n    attrs: {\n      \"element\": \"ul\",\n      \"options\": _vm.dragOptions,\n      \"move\": _vm.onMove\n    },\n    on: {\n      \"start\": function($event) {\n        _vm.isDragging = true\n      },\n      \"end\": function($event) {\n        _vm.isDragging = false\n      }\n    },\n    model: {\n      value: (_vm.list),\n      callback: function($$v) {\n        _vm.list = $$v\n      },\n      expression: \"list\"\n    }\n  }, [_c('transition-group', {\n    attrs: {\n      \"type\": \"transition\",\n      \"name\": 'flip-list'\n    }\n  }, _vm._l((_vm.list), function(element) {\n    return _c('li', {\n      key: element.order,\n      staticClass: \"list-group-item\"\n    }, [_c('i', {\n      class: element.fixed ? 'fa fa-anchor' : 'glyphicon glyphicon-pushpin',\n      attrs: {\n        \"aria-hidden\": \"true\"\n      },\n      on: {\n        \"click\": function($event) {\n          element.fixed = !element.fixed\n        }\n      }\n    }), _vm._v(\"\\n            \" + _vm._s(element.name) + \"\\n            \"), _c('span', {\n      staticClass: \"badge\"\n    }, [_vm._v(_vm._s(element.order))])])\n  }))], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-md-3\"\n  }, [_c('draggable', {\n    attrs: {\n      \"element\": \"span\",\n      \"options\": _vm.dragOptions,\n      \"move\": _vm.onMove\n    },\n    model: {\n      value: (_vm.list2),\n      callback: function($$v) {\n        _vm.list2 = $$v\n      },\n      expression: \"list2\"\n    }\n  }, [_c('transition-group', {\n    staticClass: \"list-group\",\n    attrs: {\n      \"name\": \"no\",\n      \"tag\": \"ul\"\n    }\n  }, _vm._l((_vm.list2), function(element) {\n    return _c('li', {\n      key: element.order,\n      staticClass: \"list-group-item\"\n    }, [_c('i', {\n      class: element.fixed ? 'fa fa-anchor' : 'glyphicon glyphicon-pushpin',\n      attrs: {\n        \"aria-hidden\": \"true\"\n      },\n      on: {\n        \"click\": function($event) {\n          element.fixed = !element.fixed\n        }\n      }\n    }), _vm._v(\"\\n            \" + _vm._s(element.name) + \"\\n            \"), _c('span', {\n      staticClass: \"badge\"\n    }, [_vm._v(_vm._s(element.order))])])\n  }))], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"list-group col-md-3\"\n  }, [_c('pre', [_vm._v(_vm._s(_vm.listString))])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"list-group col-md-3\"\n  }, [_c('pre', [_vm._v(_vm._s(_vm.list2String))])])])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"panel-heading\"\n  }, [_c('h3', {\n    staticClass: \"panel-title\"\n  }, [_vm._v(\"Sortbale control\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-147968d2!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Hello.vue\n// module id = 8\n// module chunks = 0","'use strict';\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n(function () {\n  \"use strict\";\n\n  function buildDraggable(Sortable) {\n    function removeNode(node) {\n      node.parentElement.removeChild(node);\n    }\n\n    function insertNodeAt(fatherNode, node, position) {\n      if (position < fatherNode.children.length) {\n        fatherNode.insertBefore(node, fatherNode.children[position]);\n      } else {\n        fatherNode.appendChild(node);\n      }\n    }\n\n    function computeVmIndex(vnodes, element) {\n      return vnodes.map(function (elt) {\n        return elt.elm;\n      }).indexOf(element);\n    }\n\n    function _computeIndexes(slots, children) {\n      if (!slots) {\n        return [];\n      }\n\n      var elmFromNodes = slots.map(function (elt) {\n        return elt.elm;\n      });\n      return [].concat(_toConsumableArray(children)).map(function (elt) {\n        return elmFromNodes.indexOf(elt);\n      });\n    }\n\n    function emit(evtName, evtData) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        return _this.$emit(evtName.toLowerCase(), evtData);\n      });\n    }\n\n    function delegateAndEmit(evtName) {\n      var _this2 = this;\n\n      return function (evtData) {\n        if (_this2.realList !== null) {\n          _this2['onDrag' + evtName](evtData);\n        }\n        emit.call(_this2, evtName, evtData);\n      };\n    }\n\n    var eventsListened = ['Start', 'Add', 'Remove', 'Update', 'End'];\n    var eventsToEmit = ['Choose', 'Sort', 'Filter', 'Clone'];\n    var readonlyProperties = ['Move'].concat(eventsListened, eventsToEmit).map(function (evt) {\n      return 'on' + evt;\n    });\n    var draggingElement = null;\n\n    var props = {\n      options: Object,\n      list: {\n        type: Array,\n        required: false,\n        default: null\n      },\n      value: {\n        type: Array,\n        required: false,\n        default: null\n      },\n      noTransitionOnDrag: {\n        type: Boolean,\n        default: false\n      },\n      clone: {\n        type: Function,\n        default: function _default(original) {\n          return original;\n        }\n      },\n      element: {\n        type: String,\n        default: 'div'\n      },\n      move: {\n        type: Function,\n        default: null\n      }\n    };\n\n    var draggableComponent = {\n      props: props,\n\n      data: function data() {\n        return {\n          transitionMode: false,\n          componentMode: false\n        };\n      },\n      render: function render(h) {\n        if (this.$slots.default && this.$slots.default.length === 1) {\n          var child = this.$slots.default[0];\n          if (child.componentOptions && child.componentOptions.tag === \"transition-group\") {\n            this.transitionMode = true;\n          }\n        }\n        return h(this.element, null, this.$slots.default);\n      },\n      mounted: function mounted() {\n        var _this3 = this;\n\n        this.componentMode = this.element.toLowerCase() !== this.$el.nodeName.toLowerCase();\n        if (this.componentMode && this.transitionMode) {\n          throw new Error('Transition-group inside component is not supported. Please alter element value or remove transition-group. Current element value: ' + this.element);\n        }\n        var optionsAdded = {};\n        eventsListened.forEach(function (elt) {\n          optionsAdded['on' + elt] = delegateAndEmit.call(_this3, elt);\n        });\n\n        eventsToEmit.forEach(function (elt) {\n          optionsAdded['on' + elt] = emit.bind(_this3, elt);\n        });\n\n        var options = _extends({}, this.options, optionsAdded, { onMove: function onMove(evt, originalEvent) {\n            return _this3.onDragMove(evt, originalEvent);\n          } });\n        !('draggable' in options) && (options.draggable = '>*');\n        this._sortable = new Sortable(this.rootContainer, options);\n        this.computeIndexes();\n      },\n      beforeDestroy: function beforeDestroy() {\n        this._sortable.destroy();\n      },\n\n\n      computed: {\n        rootContainer: function rootContainer() {\n          return this.transitionMode ? this.$el.children[0] : this.$el;\n        },\n        isCloning: function isCloning() {\n          return !!this.options && !!this.options.group && this.options.group.pull === 'clone';\n        },\n        realList: function realList() {\n          return !!this.list ? this.list : this.value;\n        }\n      },\n\n      watch: {\n        options: {\n          handler: function handler(newOptionValue) {\n            for (var property in newOptionValue) {\n              if (readonlyProperties.indexOf(property) == -1) {\n                this._sortable.option(property, newOptionValue[property]);\n              }\n            }\n          },\n\n          deep: true\n        },\n\n        realList: function realList() {\n          this.computeIndexes();\n        }\n      },\n\n      methods: {\n        getChildrenNodes: function getChildrenNodes() {\n          if (this.componentMode) {\n            return this.$children[0].$slots.default;\n          }\n          var rawNodes = this.$slots.default;\n          return this.transitionMode ? rawNodes[0].child.$slots.default : rawNodes;\n        },\n        computeIndexes: function computeIndexes() {\n          var _this4 = this;\n\n          this.$nextTick(function () {\n            _this4.visibleIndexes = _computeIndexes(_this4.getChildrenNodes(), _this4.rootContainer.children);\n          });\n        },\n        getUnderlyingVm: function getUnderlyingVm(htmlElt) {\n          var index = computeVmIndex(this.getChildrenNodes(), htmlElt);\n          var element = this.realList[index];\n          return { index: index, element: element };\n        },\n        getUnderlyingPotencialDraggableComponent: function getUnderlyingPotencialDraggableComponent(_ref) {\n          var __vue__ = _ref.__vue__;\n\n          if (!__vue__ || !__vue__.$options || __vue__.$options._componentTag !== \"transition-group\") {\n            return __vue__;\n          }\n          return __vue__.$parent;\n        },\n        emitChanges: function emitChanges(evt) {\n          var _this5 = this;\n\n          this.$nextTick(function () {\n            _this5.$emit('change', evt);\n          });\n        },\n        alterList: function alterList(onList) {\n          if (!!this.list) {\n            onList(this.list);\n          } else {\n            var newList = [].concat(_toConsumableArray(this.value));\n            onList(newList);\n            this.$emit('input', newList);\n          }\n        },\n        spliceList: function spliceList() {\n          var _arguments = arguments;\n\n          var spliceList = function spliceList(list) {\n            return list.splice.apply(list, _arguments);\n          };\n          this.alterList(spliceList);\n        },\n        updatePosition: function updatePosition(oldIndex, newIndex) {\n          var updatePosition = function updatePosition(list) {\n            return list.splice(newIndex, 0, list.splice(oldIndex, 1)[0]);\n          };\n          this.alterList(updatePosition);\n        },\n        getRelatedContextFromMoveEvent: function getRelatedContextFromMoveEvent(_ref2) {\n          var to = _ref2.to,\n              related = _ref2.related;\n\n          var component = this.getUnderlyingPotencialDraggableComponent(to);\n          if (!component) {\n            return { component: component };\n          }\n          var list = component.realList;\n          var context = { list: list, component: component };\n          if (to !== related && list && component.getUnderlyingVm) {\n            var destination = component.getUnderlyingVm(related);\n            return _extends(destination, context);\n          }\n\n          return context;\n        },\n        getVmIndex: function getVmIndex(domIndex) {\n          var indexes = this.visibleIndexes;\n          var numberIndexes = indexes.length;\n          return domIndex > numberIndexes - 1 ? numberIndexes : indexes[domIndex];\n        },\n        getComponent: function getComponent() {\n          return this.$slots.default[0].componentInstance;\n        },\n        resetTransitionData: function resetTransitionData(index) {\n          if (!this.noTransitionOnDrag || !this.transitionMode) {\n            return;\n          }\n          var nodes = this.getChildrenNodes();\n          nodes[index].data = null;\n          var transitionContainer = this.getComponent();\n          transitionContainer.children = [];\n          transitionContainer.kept = undefined;\n        },\n        onDragStart: function onDragStart(evt) {\n          this.context = this.getUnderlyingVm(evt.item);\n          evt.item._underlying_vm_ = this.clone(this.context.element);\n          draggingElement = evt.item;\n        },\n        onDragAdd: function onDragAdd(evt) {\n          var element = evt.item._underlying_vm_;\n          if (element === undefined) {\n            return;\n          }\n          removeNode(evt.item);\n          var newIndex = this.getVmIndex(evt.newIndex);\n          this.spliceList(newIndex, 0, element);\n          this.computeIndexes();\n          var added = { element: element, newIndex: newIndex };\n          this.emitChanges({ added: added });\n        },\n        onDragRemove: function onDragRemove(evt) {\n          insertNodeAt(this.rootContainer, evt.item, evt.oldIndex);\n          if (this.isCloning) {\n            removeNode(evt.clone);\n            return;\n          }\n          var oldIndex = this.context.index;\n          this.spliceList(oldIndex, 1);\n          var removed = { element: this.context.element, oldIndex: oldIndex };\n          this.resetTransitionData(oldIndex);\n          this.emitChanges({ removed: removed });\n        },\n        onDragUpdate: function onDragUpdate(evt) {\n          removeNode(evt.item);\n          insertNodeAt(evt.from, evt.item, evt.oldIndex);\n          var oldIndex = this.context.index;\n          var newIndex = this.getVmIndex(evt.newIndex);\n          this.updatePosition(oldIndex, newIndex);\n          var moved = { element: this.context.element, oldIndex: oldIndex, newIndex: newIndex };\n          this.emitChanges({ moved: moved });\n        },\n        computeFutureIndex: function computeFutureIndex(relatedContext, evt) {\n          if (!relatedContext.element) {\n            return 0;\n          }\n          var domChildren = [].concat(_toConsumableArray(evt.to.children)).filter(function (el) {\n            return el.style['display'] !== 'none';\n          });\n          var currentDOMIndex = domChildren.indexOf(evt.related);\n          var currentIndex = relatedContext.component.getVmIndex(currentDOMIndex);\n          var draggedInList = domChildren.indexOf(draggingElement) != -1;\n          return draggedInList || !evt.willInsertAfter ? currentIndex : currentIndex + 1;\n        },\n        onDragMove: function onDragMove(evt, originalEvent) {\n          var onMove = this.move;\n          if (!onMove || !this.realList) {\n            return true;\n          }\n\n          var relatedContext = this.getRelatedContextFromMoveEvent(evt);\n          var draggedContext = this.context;\n          var futureIndex = this.computeFutureIndex(relatedContext, evt);\n          _extends(draggedContext, { futureIndex: futureIndex });\n          _extends(evt, { relatedContext: relatedContext, draggedContext: draggedContext });\n          return onMove(evt, originalEvent);\n        },\n        onDragEnd: function onDragEnd(evt) {\n          this.computeIndexes();\n          draggingElement = null;\n        }\n      }\n    };\n    return draggableComponent;\n  }\n\n  if (typeof exports == \"object\") {\n    var Sortable = require(\"sortablejs\");\n    module.exports = buildDraggable(Sortable);\n  } else if (typeof define == \"function\" && define.amd) {\n    define(['sortablejs'], function (Sortable) {\n      return buildDraggable(Sortable);\n    });\n  } else if (window && window.Vue && window.Sortable) {\n    var draggable = buildDraggable(window.Sortable);\n    Vue.component('draggable', draggable);\n  }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vuedraggable/dist/vuedraggable.js\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}